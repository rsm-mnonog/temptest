{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d6c12fd9",
   "metadata": {},
   "source": [
    "---\n",
    "title: \"TZ Gaming: Optimal Targeting of Mobile Ads\"\n",
    "description: \"Logistic Regression, Permutation Importance, Prediction Plots, Pseudo R-Squared, Chi-Square Test, Correlation, Decile Analysis, Gain Curves, Confusion Matrix\"\n",
    "author: \"Mario Nonog\"\n",
    "date: today\n",
    "callout-appearance: minimal # this hides the blue \"i\" icon on .callout-notes\n",
    "theme: cosmo\n",
    "image: \"other_docs/HW_PHOTO.jpg\"\n",
    "---\n",
    "\n",
    "### Problem Description:\n",
    "As a developer of games for mobile devices, TZ gaming has achieved strong growth of its customer base. A\n",
    "prominent source of new customers has come from ads displayed through the Vneta ad-network. A mobile-ad\n",
    "network is a technology platform that serves as a broker between (1) app developers (or publishers) looking\n",
    "to sell ad space and (2) a group of advertisers.\n",
    "\n",
    "App developers sell “impressions”, i.e., a space where an ad can be shown, through the Vneta network to\n",
    "companies such as TZ gaming looking to advertise to app users. Vneta acts as a broker for 50-60 millions\n",
    "impressions/ads per day.\n",
    "TZ gaming uses ads to appeal to prospective customers for their games. They generally use short (15\n",
    "sec) video ads that help to emphasize the dynamic nature of the games. In the past, TZ has been able\n",
    "to, approximately, break-even on ad-spend with Vneta when calculating the benefits that can be directly\n",
    "attributed to ad click-through. Many senior executives at TZ believe that there are additional, longer-term,\n",
    "benefits from these ads such as brand awareness, etc. that are harder to quantify.\n",
    "\n",
    "Currently, TZ has access to very limited data from Vneta. Matt Huateng, the CEO of TZ gaming, is\n",
    "intrigued by the potential for data science to enhance the efficiency of targeted advertising on mobile devices.\n",
    "Specifically, two options are under consideration: (1) Buy access to additional data from Vneta and use TZ’s\n",
    "analytics team to build targeting models or (2) Subscribe to Vneta’s analytics consultancy service, which\n",
    "provides impression-level click-through rate predictions based on Vneta’s proprietary data and algorithms.\n",
    "\n",
    "Vneta has shared behavioral information linked to 115,488 recent impressions used to show TZ ads and has\n",
    "also provided a set or predictions based on their own (proprietary) algorithm. Matt is unsure if the consulting\n",
    "services offered by Vneta will be worth the money for future ad campaigns and has asked you to do some\n",
    "initial analyses on the provided data and compare the generated predictions to Vneta’s recommendations.\n",
    "The following targeting options will be evaluated to determine the best path forward.\n",
    "\n",
    "### Options:\n",
    "1. Spam all prospects\n",
    "2. Continue with the current targeting approach\n",
    "3. Use predictions from a logistic regression model for ad targeting\n",
    "4. Use predictions generated by Vneta for ad targeting\n",
    "\n",
    "\n",
    "### Assumptions\n",
    "The assumptions used for the analysis are as follows:\n",
    "• Targeting of impressions to consumers covered by the Vneta ad-network to date has been (approximately) random\n",
    "• Cost per 1,000 video impressions (CPM) is $10\n",
    "• Conversion to sign-up as a TZ game player after clicking on an ad is 5%\n",
    "• The expected CLV of customers that sign-up with TZ after clicking on an ad is approximately $25\n",
    "• The price charged for the data by Vneta is $50K\n",
    "• The price charged for the data science consulting services by Vneta is $150K\n",
    "\n",
    "### Approach:\n",
    "• Use the 87,535 rows in the data with “training == ‘train’ ” to estimate different models. Then generate\n",
    "predictions for all 115,488 rows in the dataset\n",
    "• Options 1-4 should be evaluated only on the predictions generated for the 27,953 rows in the data with\n",
    "“training == ‘test’ ”. These are the observations that were not used to estimate your model\n",
    "• Extrapolate the cost and benefits for options 1-4 above for an upcoming advertising campaign where\n",
    "TZ will commit to purchase 20-million impressions from Vneta\n",
    "\n",
    "TZ gaming has decided to use logistic regression for targeting. This is a powerful and widely used tool to\n",
    "model consumer response. It is similar to linear regression but the key difference is that the response variable\n",
    "(target) is binary (e.g., click or no-click) rather than continuous. For each impression, the logistic regression\n",
    "model will predict the probability of click-through, which can be used for ad targeting. Like linear regression,\n",
    "you can include both continuous and categorical predictors in your model as explanatory variables (features).\n",
    "Matt is eager to assess the value of logistic regression as a method to predict ad click-through and target\n",
    "prospects and has asked you to complete the following analyses.\n",
    "\n",
    "### TZ Gaming: Optimal Targeting of Mobile Ads\n",
    "\n",
    "Each row in the `tz_gaming` dataset represents an impression. For each row (impression), we have data on 21 variables. All explanatory variables are created by Vneta based on one month tracking history of users, apps, and ads. The available variables are described in below. \n",
    "\n",
    "* _training_ -- Dummy variable that splits the dataset into a training (\"train\") and a test (\"test\") set\n",
    "* _inum_ -- Impression number\n",
    "* _click_ -- Click indicator for the TZ ad served in the impression. Equals \"yes\" if the ad was clicked and \"no\" otherwise\n",
    "* _time_ -- The hour of the day in which the impression occurred (1-24). For example, \"2\" indicates the impression occurred between 1 am and 2 am\n",
    "* _time\\_fct_ -- Same as _time_ but the is coded as categorical \n",
    "* _app_ -- The app in which the impression was shown. Ranges from 1 to 49\n",
    "* _mobile\\_os_ -- Customer's mobile OS\n",
    "* _impup_ -- Number of past impressions the user has seen in the app\n",
    "* _clup_ -- Number of past impressions the user has clicked on in the app\n",
    "* _ctrup_ -- Past CTR (Click-Through Rate) (x 100) for the user in the app\n",
    "* _impua_ -- Number of past impressions of the TZ ad that the user has seen across all apps\n",
    "* _clua_ -- Number of past impressions of the TZ ad that the user has clicked on across all apps\n",
    "* _ctrua_ -- Past CTR (x 100) of the TZ ad by the user across all apps\n",
    "* _imput_ -- Number of past impressions the user has seen within in the hour\n",
    "* _clut_ -- Number of past impressions the user has clicked on in the hour\n",
    "* _ctrut_ -- Past CTR (x 100) of the user in the hour\n",
    "* _imppat_ -- Number of past impressions that showed the TZ ad in the app in the hour\n",
    "* _clpat_ -- Number of past clicks the TZ ad has received in the app in the hour\n",
    "* _ctrpat_ -- Past CTR (x 100) of the TZ ad in the app in the hour\n",
    "* _rnd_ -- Simulated data from a normal distribution with mean 0 and a standard deviation of 1\n",
    "* _pred\\_vneta_ -- Predicted probability of click per impressions generated by Vneta's proprietary machine learning algorithm\n",
    "* id -- Anonymized user ID\n",
    "\n",
    "Note that there is a clear relationship between the impressions, clicks, and ctr variables within a strata. Specifically: \n",
    "\n",
    "* ctrup = clup/impup\n",
    "* ctru = clu/impu\n",
    "* ctrut = clut/imput\n",
    "* ctrpat = clpat/impat\n",
    "\n",
    "The last three letters of a feature indicate the sources of variation in a variable:\n",
    "\n",
    "* u — denotes user\n",
    "* t — denotes time\n",
    "* p — denotes app\n",
    "* a — denotes ad \n",
    "\n",
    "### Logistic Regression\n",
    ":::: {.callout-note collapse=\"true\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1739dc4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       training     inum click  time time_fct    app mobile_os  impup  clup  \\\n",
      "0         train       I7    no     9        9   app8       ios    439     2   \n",
      "1         train      I23    no    15       15   app1       ios     64     0   \n",
      "2         train      I28    no    12       12   app5       ios     80     0   \n",
      "3         train      I30    no    19       19   app1       ios     25     0   \n",
      "4         train      I35    no    24       24   app1   android   3834    29   \n",
      "...         ...      ...   ...   ...      ...    ...       ...    ...   ...   \n",
      "115483     test  I399982    no    21       21   app2       ios   2110     0   \n",
      "115484     test  I399986    no    17       17  app14   android    291     1   \n",
      "115485     test  I399991    no    23       23   app1   android    364     3   \n",
      "115486     test  I399992    no    20       20   app6   android     59     2   \n",
      "115487     test  I399994    no    18       18   app1       ios    498     7   \n",
      "\n",
      "           ctrup  ...     ctrua  imput  clut     ctrut  imppat  clpat  \\\n",
      "0       0.455581  ...  0.000000     25     0  0.000000      71      1   \n",
      "1       0.000000  ...  0.000000      7     0  0.000000   67312   1069   \n",
      "2       0.000000  ...  6.578947     94     0  0.000000     331      1   \n",
      "3       0.000000  ...  0.000000     19     0  0.000000   71114   1001   \n",
      "4       0.756390  ...  0.689655    329     4  1.215805  183852   2317   \n",
      "...          ...  ...       ...    ...   ...       ...     ...    ...   \n",
      "115483  0.000000  ...  0.000000    158     0  0.000000   23216     19   \n",
      "115484  0.343643  ...  0.000000     74     1  1.351351    3665     14   \n",
      "115485  0.824176  ...  4.347826     19     0  0.000000  173353   2292   \n",
      "115486  3.389831  ...  0.000000     37     1  2.702703    3474     53   \n",
      "115487  1.405622  ...  4.166667     53     1  1.886792   77884   1201   \n",
      "\n",
      "          ctrpat       rnd  pred_vneta        id  \n",
      "0       1.408451 -1.207066    0.003961  id247135  \n",
      "1       1.588127  0.277429    0.003961  id245079  \n",
      "2       0.302115  1.084441    0.003961  id927245  \n",
      "3       1.407599 -2.345698    0.018965  id922188  \n",
      "4       1.260253  0.429125    0.003961  id355833  \n",
      "...          ...       ...         ...       ...  \n",
      "115483  0.081840 -1.852059    0.003961  id847352  \n",
      "115484  0.381992 -0.296415    0.003961  id457437  \n",
      "115485  1.322158  0.099201    0.003961  id792352  \n",
      "115486  1.525619 -0.186421    0.050679  id115678  \n",
      "115487  1.542037  0.857281    0.003961  id705546  \n",
      "\n",
      "[115488 rows x 22 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "tz_gaming = pd.read_parquet(\"data/tz_gaming.parquet\")\n",
    "print(tz_gaming)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5fe58328",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    train\n",
      "1    train\n",
      "2    train\n",
      "3    train\n",
      "4    train\n",
      "Name: training, dtype: object\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>training</th>\n",
       "      <th>inum</th>\n",
       "      <th>click</th>\n",
       "      <th>time</th>\n",
       "      <th>time_fct</th>\n",
       "      <th>app</th>\n",
       "      <th>mobile_os</th>\n",
       "      <th>impup</th>\n",
       "      <th>clup</th>\n",
       "      <th>ctrup</th>\n",
       "      <th>...</th>\n",
       "      <th>ctrua</th>\n",
       "      <th>imput</th>\n",
       "      <th>clut</th>\n",
       "      <th>ctrut</th>\n",
       "      <th>imppat</th>\n",
       "      <th>clpat</th>\n",
       "      <th>ctrpat</th>\n",
       "      <th>rnd</th>\n",
       "      <th>pred_vneta</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>train</td>\n",
       "      <td>I7</td>\n",
       "      <td>no</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>app8</td>\n",
       "      <td>ios</td>\n",
       "      <td>439</td>\n",
       "      <td>2</td>\n",
       "      <td>0.455581</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>71</td>\n",
       "      <td>1</td>\n",
       "      <td>1.408451</td>\n",
       "      <td>-1.207066</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id247135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>train</td>\n",
       "      <td>I23</td>\n",
       "      <td>no</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>64</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>67312</td>\n",
       "      <td>1069</td>\n",
       "      <td>1.588127</td>\n",
       "      <td>0.277429</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id245079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>train</td>\n",
       "      <td>I28</td>\n",
       "      <td>no</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>app5</td>\n",
       "      <td>ios</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>6.578947</td>\n",
       "      <td>94</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>331</td>\n",
       "      <td>1</td>\n",
       "      <td>0.302115</td>\n",
       "      <td>1.084441</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id927245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>train</td>\n",
       "      <td>I30</td>\n",
       "      <td>no</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>71114</td>\n",
       "      <td>1001</td>\n",
       "      <td>1.407599</td>\n",
       "      <td>-2.345698</td>\n",
       "      <td>0.018965</td>\n",
       "      <td>id922188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>train</td>\n",
       "      <td>I35</td>\n",
       "      <td>no</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>3834</td>\n",
       "      <td>29</td>\n",
       "      <td>0.756390</td>\n",
       "      <td>...</td>\n",
       "      <td>0.689655</td>\n",
       "      <td>329</td>\n",
       "      <td>4</td>\n",
       "      <td>1.215805</td>\n",
       "      <td>183852</td>\n",
       "      <td>2317</td>\n",
       "      <td>1.260253</td>\n",
       "      <td>0.429125</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id355833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87530</th>\n",
       "      <td>train</td>\n",
       "      <td>I299985</td>\n",
       "      <td>no</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>app2</td>\n",
       "      <td>android</td>\n",
       "      <td>1181</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.840336</td>\n",
       "      <td>55</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9625</td>\n",
       "      <td>14</td>\n",
       "      <td>0.145455</td>\n",
       "      <td>-0.249031</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id565693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87531</th>\n",
       "      <td>train</td>\n",
       "      <td>I299986</td>\n",
       "      <td>no</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>app33</td>\n",
       "      <td>ios</td>\n",
       "      <td>1885</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>374</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>658</td>\n",
       "      <td>1</td>\n",
       "      <td>0.151976</td>\n",
       "      <td>0.770718</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id222657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87532</th>\n",
       "      <td>train</td>\n",
       "      <td>I299990</td>\n",
       "      <td>no</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>app45</td>\n",
       "      <td>ios</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>166</td>\n",
       "      <td>7</td>\n",
       "      <td>4.216867</td>\n",
       "      <td>0.181559</td>\n",
       "      <td>0.018965</td>\n",
       "      <td>id340594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87533</th>\n",
       "      <td>train</td>\n",
       "      <td>I299991</td>\n",
       "      <td>no</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>113</td>\n",
       "      <td>2</td>\n",
       "      <td>1.769912</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14245</td>\n",
       "      <td>158</td>\n",
       "      <td>1.109161</td>\n",
       "      <td>-1.263831</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id634151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87534</th>\n",
       "      <td>train</td>\n",
       "      <td>I299995</td>\n",
       "      <td>no</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>app35</td>\n",
       "      <td>android</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>7.142857</td>\n",
       "      <td>472</td>\n",
       "      <td>1</td>\n",
       "      <td>0.211864</td>\n",
       "      <td>-1.428302</td>\n",
       "      <td>0.050679</td>\n",
       "      <td>id280606</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>87535 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      training     inum click  time time_fct    app mobile_os  impup  clup  \\\n",
       "0        train       I7    no     9        9   app8       ios    439     2   \n",
       "1        train      I23    no    15       15   app1       ios     64     0   \n",
       "2        train      I28    no    12       12   app5       ios     80     0   \n",
       "3        train      I30    no    19       19   app1       ios     25     0   \n",
       "4        train      I35    no    24       24   app1   android   3834    29   \n",
       "...        ...      ...   ...   ...      ...    ...       ...    ...   ...   \n",
       "87530    train  I299985    no    11       11   app2   android   1181     0   \n",
       "87531    train  I299986    no    10       10  app33       ios   1885     0   \n",
       "87532    train  I299990    no     1        1  app45       ios      8     0   \n",
       "87533    train  I299991    no     8        8   app1       ios    113     2   \n",
       "87534    train  I299995    no    18       18  app35   android     13     0   \n",
       "\n",
       "          ctrup  ...     ctrua  imput  clut     ctrut  imppat  clpat  \\\n",
       "0      0.455581  ...  0.000000     25     0  0.000000      71      1   \n",
       "1      0.000000  ...  0.000000      7     0  0.000000   67312   1069   \n",
       "2      0.000000  ...  6.578947     94     0  0.000000     331      1   \n",
       "3      0.000000  ...  0.000000     19     0  0.000000   71114   1001   \n",
       "4      0.756390  ...  0.689655    329     4  1.215805  183852   2317   \n",
       "...         ...  ...       ...    ...   ...       ...     ...    ...   \n",
       "87530  0.000000  ...  0.840336     55     0  0.000000    9625     14   \n",
       "87531  0.000000  ...  0.000000    374     0  0.000000     658      1   \n",
       "87532  0.000000  ...  0.000000     15     0  0.000000     166      7   \n",
       "87533  1.769912  ...  0.000000      0     0  0.000000   14245    158   \n",
       "87534  0.000000  ...  0.000000     14     1  7.142857     472      1   \n",
       "\n",
       "         ctrpat       rnd  pred_vneta        id  \n",
       "0      1.408451 -1.207066    0.003961  id247135  \n",
       "1      1.588127  0.277429    0.003961  id245079  \n",
       "2      0.302115  1.084441    0.003961  id927245  \n",
       "3      1.407599 -2.345698    0.018965  id922188  \n",
       "4      1.260253  0.429125    0.003961  id355833  \n",
       "...         ...       ...         ...       ...  \n",
       "87530  0.145455 -0.249031    0.003961  id565693  \n",
       "87531  0.151976  0.770718    0.003961  id222657  \n",
       "87532  4.216867  0.181559    0.018965  id340594  \n",
       "87533  1.109161 -1.263831    0.003961  id634151  \n",
       "87534  0.211864 -1.428302    0.050679  id280606  \n",
       "\n",
       "[87535 rows x 22 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tz_train = tz_gaming[tz_gaming[\"training\"] == \"train\"]\n",
    "print(tz_train[\"training\"].head())\n",
    "\n",
    "tz_train"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a5bdc25",
   "metadata": {},
   "source": [
    "::::"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2a65a075",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic regression (GLM)\n",
      "Data                 : tz_train\n",
      "Response variable    : click\n",
      "Level                : yes\n",
      "Explanatory variables: time_fct, app, mobile_os, impua, clua, ctrua\n",
      "Null hyp.: There is no effect of x on click\n",
      "Alt. hyp.: There is an effect of x on click\n",
      "\n",
      "                     OR      OR%  coefficient   std.error  z.value p.value     \n",
      "Intercept         0.029   -97.1%       -3.528       0.197  -17.936  < .001  ***\n",
      "time_fct[2]       0.622   -37.8%       -0.474       0.321   -1.478   0.139     \n",
      "time_fct[3]       0.718   -28.2%       -0.332       0.454   -0.730   0.466     \n",
      "time_fct[4]       0.000  -100.0%      -23.543   42007.161   -0.001     1.0     \n",
      "time_fct[5]       0.000  -100.0%      -23.721   55229.970   -0.000     1.0     \n",
      "time_fct[6]       0.349   -65.1%       -1.052       1.021   -1.030   0.303     \n",
      "time_fct[7]       1.221    22.1%        0.200       0.426    0.468    0.64     \n",
      "time_fct[8]       1.104    10.4%        0.099       0.296    0.335   0.737     \n",
      "time_fct[9]       1.029     2.9%        0.029       0.287    0.101    0.92     \n",
      "time_fct[10]      0.830   -17.0%       -0.187       0.295   -0.633   0.527     \n",
      "time_fct[11]      0.637   -36.3%       -0.451       0.276   -1.635   0.102     \n",
      "time_fct[12]      0.874   -12.6%       -0.135       0.280   -0.483   0.629     \n",
      "time_fct[13]      0.590   -41.0%       -0.528       0.290   -1.823   0.068    .\n",
      "time_fct[14]      1.099     9.9%        0.094       0.225    0.419   0.675     \n",
      "time_fct[15]      0.986    -1.4%       -0.014       0.225   -0.062   0.951     \n",
      "time_fct[16]      1.046     4.6%        0.045       0.233    0.195   0.846     \n",
      "time_fct[17]      1.014     1.4%        0.014       0.250    0.055   0.956     \n",
      "time_fct[18]      1.061     6.1%        0.060       0.247    0.241   0.809     \n",
      "time_fct[19]      1.284    28.4%        0.250       0.233    1.072   0.284     \n",
      "time_fct[20]      1.224    22.4%        0.202       0.231    0.873   0.382     \n",
      "time_fct[21]      0.867   -13.3%       -0.142       0.244   -0.584   0.559     \n",
      "time_fct[22]      0.970    -3.0%       -0.030       0.238   -0.127   0.899     \n",
      "time_fct[23]      1.044     4.4%        0.043       0.238    0.180   0.857     \n",
      "time_fct[24]      1.099     9.9%        0.094       0.229    0.410   0.682     \n",
      "app[app2]         0.124   -87.6%       -2.091       0.229   -9.127  < .001  ***\n",
      "app[app3]         0.184   -81.6%       -1.694       1.003   -1.689   0.091    .\n",
      "app[app4]         0.383   -61.7%       -0.960       0.321   -2.988   0.003   **\n",
      "app[app5]         0.282   -71.8%       -1.264       1.005   -1.258   0.208     \n",
      "app[app6]         0.651   -34.9%       -0.429       0.175   -2.457   0.014    *\n",
      "app[app7]         0.596   -40.4%       -0.517       1.007   -0.513   0.608     \n",
      "app[app8]         0.000  -100.0%      -24.374   71686.172   -0.000     1.0     \n",
      "app[app9]         0.748   -25.2%       -0.290       0.236   -1.227    0.22     \n",
      "app[app10]        0.000  -100.0%      -23.891   67058.977   -0.000     1.0     \n",
      "app[app11]        1.051     5.1%        0.050       0.719    0.069   0.945     \n",
      "app[app12]        0.713   -28.7%       -0.338       0.224   -1.504   0.133     \n",
      "app[app13]        2.131   113.1%        0.757       0.204    3.709  < .001  ***\n",
      "app[app14]        0.218   -78.2%       -1.525       0.451   -3.384  < .001  ***\n",
      "app[app15]        0.462   -53.8%       -0.772       0.717   -1.077   0.281     \n",
      "app[app16]        0.251   -74.9%       -1.383       0.711   -1.945   0.052    .\n",
      "app[app17]        0.882   -11.8%       -0.126       0.724   -0.174   0.862     \n",
      "app[app18]        0.075   -92.5%       -2.593       1.002   -2.586    0.01   **\n",
      "app[app19]        0.000  -100.0%      -24.366   92379.731   -0.000     1.0     \n",
      "app[app20]        0.000  -100.0%      -24.211   71551.198   -0.000     1.0     \n",
      "app[app21]        0.337   -66.3%       -1.087       0.383   -2.839   0.005   **\n",
      "app[app22]        0.321   -67.9%       -1.136       1.005   -1.130   0.258     \n",
      "app[app23]        3.111   211.1%        1.135       0.392    2.898   0.004   **\n",
      "app[app24]        1.590    59.0%        0.464       0.273    1.701   0.089    .\n",
      "app[app25]        0.975    -2.5%       -0.025       0.594   -0.042   0.966     \n",
      "app[app26]        0.000  -100.0%      -24.471   62613.516   -0.000     1.0     \n",
      "app[app27]        0.202   -79.8%       -1.601       0.711   -2.253   0.024    *\n",
      "app[app28]        0.328   -67.2%       -1.114       0.581   -1.918   0.055    .\n",
      "app[app29]        2.634   163.4%        0.969       0.345    2.805   0.005   **\n",
      "app[app30]        0.000  -100.0%      -24.385   85789.970   -0.000     1.0     \n",
      "app[app31]        0.246   -75.4%       -1.403       0.710   -1.975   0.048    *\n",
      "app[app32]        0.000  -100.0%      -23.157   46670.216   -0.000     1.0     \n",
      "app[app33]        0.513   -48.7%       -0.668       0.338   -1.974   0.048    *\n",
      "app[app34]        0.000  -100.0%      -24.221   54802.115   -0.000     1.0     \n",
      "app[app35]        0.226   -77.4%       -1.486       1.004   -1.480   0.139     \n",
      "app[app36]        0.000  -100.0%      -24.122   76747.449   -0.000     1.0     \n",
      "app[app37]        0.434   -56.6%       -0.836       0.714   -1.171   0.242     \n",
      "app[app38]        0.000  -100.0%      -23.864   53394.100   -0.000     1.0     \n",
      "app[app39]        1.741    74.1%        0.554       0.419    1.322   0.186     \n",
      "app[app40]        1.005     0.5%        0.005       0.514    0.009   0.993     \n",
      "app[app41]        0.632   -36.8%       -0.460       0.714   -0.644   0.519     \n",
      "app[app42]        2.009   100.9%        0.698       0.369    1.889   0.059    .\n",
      "app[app43]        0.000  -100.0%      -24.466   75014.775   -0.000     1.0     \n",
      "app[app44]        0.000  -100.0%      -24.238   45702.677   -0.001     1.0     \n",
      "app[app45]        1.479    47.9%        0.391       0.588    0.665   0.506     \n",
      "app[app46]        0.296   -70.4%       -1.216       1.005   -1.210   0.226     \n",
      "app[app47]        0.289   -71.1%       -1.241       1.005   -1.235   0.217     \n",
      "app[app48]        0.000  -100.0%      -24.030  101834.366   -0.000     1.0     \n",
      "app[app49]        0.241   -75.9%       -1.424       1.004   -1.418   0.156     \n",
      "mobile_os[ios]    0.450   -55.0%       -0.799       0.076  -10.440  < .001  ***\n",
      "mobile_os[other]  0.719   -28.1%       -0.330       0.183   -1.801   0.072    .\n",
      "impua             0.979    -2.1%       -0.022       0.002  -11.386  < .001  ***\n",
      "clua              1.295    29.5%        0.259       0.058    4.452  < .001  ***\n",
      "ctrua             1.022     2.2%        0.021       0.002    9.058  < .001  ***\n",
      "\n",
      "Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n",
      "\n",
      "Pseudo R-squared (McFadden): 0.109\n",
      "Pseudo R-squared (McFadden adjusted): 0.092\n",
      "Area under the RO Curve (AUC): 0.792\n",
      "Log-likelihood: -3946.072, AIC: 8046.145, BIC: 8768.389\n",
      "Chi-squared: 968.279, df(76), p.value < 0.001 \n",
      "Nr obs: 87,535\n"
     ]
    }
   ],
   "source": [
    "import pyrsm as rsm\n",
    "clf= rsm.model.logistic(\n",
    "        data={\"tz_train\":tz_train},\n",
    "        rvar= \"click\",\n",
    "        lev=\"yes\",\n",
    "        evar=[ \"time_fct\", \"app\", \"mobile_os\", \"impua\", \"clua\", \"ctrua\"]\n",
    ")\n",
    "clf.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7b5074e",
   "metadata": {},
   "source": [
    "### Interpretation\n",
    "For OR (Odds Ratio) As another hour is added to tim_fct[2], the model suggest that the odds of clicking will decrease by a factor of 0.622 or by 37.8% that is when keeping all other variable in the model constant. \n",
    "\n",
    "For OR (Odds Ratio) As another hour is added to tim_fct[3], the model suggest that the odds of clicking will decrease by a factor of 0.718 or by 28.2% that is when keeping all other variable in the model constant. \n",
    "\n",
    "And so on for all the rest of the features. \n",
    "\n",
    "### Chi-Square Citical Value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "83c36fdd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "97.35097037903296 107.58254478061235\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import chi2\n",
    "df=76\n",
    "alpha_0_05 = chi2.ppf(1-0.05,df)\n",
    "alpha_0_01= chi2.ppf(1-0.01,df)\n",
    "print(alpha_0_05,alpha_0_01)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63faf969",
   "metadata": {},
   "source": [
    "The logistic regression chi square value (970) is so much higher than both the calculated chi-square critical value above(97, 107). Therefore, the difference between the observed data and expected data is extremely large, thus reject the null hypothesis. \n",
    "\n",
    ":::: {.callout-note collapse=\"true\"}\n",
    "### Model Fit Metrics\n",
    "\n",
    "| Metric             | Value |Meaning                                                         |\n",
    "|----------------------|---------------------------------------------------------------------|\n",
    "| McFadden Pseudo R²   | 0.109,  Indicates modest model fit (0.2–0.4 is strong)                                                          |\n",
    "| Adjusted Pseudo R²   |  0.092, Slightly adjusted down for number of predictors                                                                 \n",
    "| AUC             | 0.792, \tGood discrimination power (0.7–0.8 = good)                                                    |\n",
    "| Log-likelihood           | -3946.072  higher is better                                                  \n",
    "| AIC              | 8046.145, Lower = better fit                                                   |\n",
    "| BIC        | 8768.389, Penalizes complexity more than AIC                                        |\n",
    "| Chi-squared (df=76)           | 968.279, Strong model signal (p < 0.001)                                        |\n",
    "| Number of Observations         |87,535,Large dataset, good statistical power \n",
    "::::\n",
    "\n",
    "Based on the p=value the most significant features are app2. app13, app14, mobile_os, impua,clua and ctrua. Now let use a different method to see the variable that is the  most important. However, first let us see the plot of the classifier (clf)\n",
    "\n",
    "### Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0bc05aed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 960x1152 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf.plot(\n",
    "    plots=\"pred\", incl=[ \"time_fct\", \"app\", \"mobile_os\", \"impua\", \"clua\", \"ctrua\"]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b6a0eac",
   "metadata": {},
   "source": [
    "### Permutation Importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f6cb79d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf.plot(\"vimp\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa86ec0d",
   "metadata": {},
   "source": [
    "### Interpretation\n",
    "\n",
    "The app variable has the highest importance because it has the highest decrease in AUC after permutted. Impua comes second which still contributes significantly on model predictions. Then, mobile_os is next important and the last three is time_fct, clua, ctrua have way less impact on model predictions. The chi square of 968 is way above our critical value of 97 and 107, which means that there is a greater deviation between observed and expected frequencies, suggesting that more variables are more likely to be dependent or assoicated from each other, which is also supported by  the p_value less than 0.001. The Pseudo R-Squared of 0.109 or 0.092 when adjusted indicates the goodness of fit for logistic regression, higher means better fit. This number shows on how well the independent variales explain the dependent variables. \n",
    "\n",
    "\n",
    "\n",
    "### Prediction of Click Probability"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e2a3d333",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  training inum click  time time_fct   app mobile_os  impup  clup     ctrup  \\\n",
      "0    train   I7    no     9        9  app8       ios    439     2  0.455581   \n",
      "1    train  I23    no    15       15  app1       ios     64     0  0.000000   \n",
      "2    train  I28    no    12       12  app5       ios     80     0  0.000000   \n",
      "3    train  I30    no    19       19  app1       ios     25     0  0.000000   \n",
      "4    train  I35    no    24       24  app1   android   3834    29  0.756390   \n",
      "\n",
      "   ...  imput  clut     ctrut  imppat  clpat    ctrpat       rnd  pred_vneta  \\\n",
      "0  ...     25     0  0.000000      71      1  1.408451 -1.207066    0.003961   \n",
      "1  ...      7     0  0.000000   67312   1069  1.588127  0.277429    0.003961   \n",
      "2  ...     94     0  0.000000     331      1  0.302115  1.084441    0.003961   \n",
      "3  ...     19     0  0.000000   71114   1001  1.407599 -2.345698    0.018965   \n",
      "4  ...    329     4  1.215805  183852   2317  1.260253  0.429125    0.003961   \n",
      "\n",
      "         id    pred_logit  \n",
      "0  id247135  3.382977e-13  \n",
      "1  id245079  1.156355e-02  \n",
      "2  id927245  2.655311e-03  \n",
      "3  id922188  1.349420e-02  \n",
      "4  id355833  1.868222e-03  \n",
      "\n",
      "[5 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "tz_gaming[\"pred_logit\"]= clf.predict(tz_gaming)[\"prediction\"]\n",
    "print(tz_gaming.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "541dd649",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  training inum click  time time_fct   app mobile_os  impup  clup     ctrup  \\\n",
      "0    train   I7    no     9        9  app8       ios    439     2  0.455581   \n",
      "1    train  I23    no    15       15  app1       ios     64     0  0.000000   \n",
      "2    train  I28    no    12       12  app5       ios     80     0  0.000000   \n",
      "3    train  I30    no    19       19  app1       ios     25     0  0.000000   \n",
      "4    train  I35    no    24       24  app1   android   3834    29  0.756390   \n",
      "\n",
      "   ...  imput  clut     ctrut  imppat  clpat    ctrpat       rnd  pred_vneta  \\\n",
      "0  ...     25     0  0.000000      71      1  1.408451 -1.207066    0.003961   \n",
      "1  ...      7     0  0.000000   67312   1069  1.588127  0.277429    0.003961   \n",
      "2  ...     94     0  0.000000     331      1  0.302115  1.084441    0.003961   \n",
      "3  ...     19     0  0.000000   71114   1001  1.407599 -2.345698    0.018965   \n",
      "4  ...    329     4  1.215805  183852   2317  1.260253  0.429125    0.003961   \n",
      "\n",
      "         id    pred_logit  \n",
      "0  id247135  3.382977e-13  \n",
      "1  id245079  1.156355e-02  \n",
      "2  id927245  2.655311e-03  \n",
      "3  id922188  1.349420e-02  \n",
      "4  id355833  1.868222e-03  \n",
      "\n",
      "[5 rows x 23 columns]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_58081/4094291988.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  tz_train[\"pred_logit\"]= clf.predict(tz_train)[\"prediction\"]\n"
     ]
    }
   ],
   "source": [
    "tz_train[\"pred_logit\"]= clf.predict(tz_train)[\"prediction\"]\n",
    "print(tz_train.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe37a0b1",
   "metadata": {},
   "source": [
    "### Logistic Regression (EVAR: ONLY RND)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "52732a35",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic regression (GLM)\n",
      "Data                 : tz_train\n",
      "Response variable    : click\n",
      "Level                : yes\n",
      "Explanatory variables: rnd\n",
      "Null hyp.: There is no effect of x on click\n",
      "Alt. hyp.: There is an effect of x on click\n",
      "\n",
      "              OR     OR%  coefficient  std.error  z.value p.value     \n",
      "Intercept  0.009  -99.1%       -4.720      0.036 -130.657  < .001  ***\n",
      "rnd        0.965   -3.5%       -0.036      0.036   -0.986   0.324     \n",
      "\n",
      "Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n",
      "\n",
      "Pseudo R-squared (McFadden): 0.0\n",
      "Pseudo R-squared (McFadden adjusted): -0.0\n",
      "Area under the RO Curve (AUC): 0.513\n",
      "Log-likelihood: -4429.726, AIC: 8863.451, BIC: 8882.211\n",
      "Chi-squared: 0.972, df(1), p.value 0.324 \n",
      "Nr obs: 87,535\n"
     ]
    }
   ],
   "source": [
    "clf_rnd= rsm.model.logistic(\n",
    "    data= {\"tz_train\": tz_train},\n",
    "    rvar= \"click\",\n",
    "    lev= \"yes\",\n",
    "    evar= \"rnd\"\n",
    ")\n",
    "clf_rnd.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3caca73",
   "metadata": {},
   "source": [
    "### Prediction of Click Probability (EVAR: ONLY RND)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e2d77ae0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  training inum click  time time_fct   app mobile_os  impup  clup     ctrup  \\\n",
      "0    train   I7    no     9        9  app8       ios    439     2  0.455581   \n",
      "1    train  I23    no    15       15  app1       ios     64     0  0.000000   \n",
      "2    train  I28    no    12       12  app5       ios     80     0  0.000000   \n",
      "3    train  I30    no    19       19  app1       ios     25     0  0.000000   \n",
      "4    train  I35    no    24       24  app1   android   3834    29  0.756390   \n",
      "\n",
      "   ...  clut     ctrut  imppat  clpat    ctrpat       rnd  pred_vneta  \\\n",
      "0  ...     0  0.000000      71      1  1.408451 -1.207066    0.003961   \n",
      "1  ...     0  0.000000   67312   1069  1.588127  0.277429    0.003961   \n",
      "2  ...     0  0.000000     331      1  0.302115  1.084441    0.003961   \n",
      "3  ...     0  0.000000   71114   1001  1.407599 -2.345698    0.018965   \n",
      "4  ...     4  1.215805  183852   2317  1.260253  0.429125    0.003961   \n",
      "\n",
      "         id    pred_logit  pred_rnd  \n",
      "0  id247135  3.382977e-13  0.009222  \n",
      "1  id245079  1.156355e-02  0.008751  \n",
      "2  id927245  2.655311e-03  0.008505  \n",
      "3  id922188  1.349420e-02  0.009600  \n",
      "4  id355833  1.868222e-03  0.008704  \n",
      "\n",
      "[5 rows x 24 columns]\n"
     ]
    }
   ],
   "source": [
    "tz_gaming[\"pred_rnd\"]= clf_rnd.predict(tz_gaming)[\"prediction\"]\n",
    "print(tz_gaming.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6cd78b1c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  training inum click  time time_fct   app mobile_os  impup  clup     ctrup  \\\n",
      "0    train   I7    no     9        9  app8       ios    439     2  0.455581   \n",
      "1    train  I23    no    15       15  app1       ios     64     0  0.000000   \n",
      "2    train  I28    no    12       12  app5       ios     80     0  0.000000   \n",
      "3    train  I30    no    19       19  app1       ios     25     0  0.000000   \n",
      "4    train  I35    no    24       24  app1   android   3834    29  0.756390   \n",
      "\n",
      "   ...  clut     ctrut  imppat  clpat    ctrpat       rnd  pred_vneta  \\\n",
      "0  ...     0  0.000000      71      1  1.408451 -1.207066    0.003961   \n",
      "1  ...     0  0.000000   67312   1069  1.588127  0.277429    0.003961   \n",
      "2  ...     0  0.000000     331      1  0.302115  1.084441    0.003961   \n",
      "3  ...     0  0.000000   71114   1001  1.407599 -2.345698    0.018965   \n",
      "4  ...     4  1.215805  183852   2317  1.260253  0.429125    0.003961   \n",
      "\n",
      "         id    pred_logit  pred_rnd  \n",
      "0  id247135  3.382977e-13  0.009222  \n",
      "1  id245079  1.156355e-02  0.008751  \n",
      "2  id927245  2.655311e-03  0.008505  \n",
      "3  id922188  1.349420e-02  0.009600  \n",
      "4  id355833  1.868222e-03  0.008704  \n",
      "\n",
      "[5 rows x 24 columns]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_58081/2027560838.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  tz_train[\"pred_rnd\"]= clf_rnd.predict(tz_train)[\"prediction\"]\n"
     ]
    }
   ],
   "source": [
    "tz_train[\"pred_rnd\"]= clf_rnd.predict(tz_train)[\"prediction\"]\n",
    "print(tz_train.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edfb09c7",
   "metadata": {},
   "source": [
    "## Multicollinearity and Omitted Variable Bias"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6ea1c33e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic regression (GLM)\n",
      "Data                 : tz_train\n",
      "Response variable    : click\n",
      "Level                : yes\n",
      "Explanatory variables: imppat, clpat, ctrpat\n",
      "Null hyp.: There is no effect of x on click\n",
      "Alt. hyp.: There is an effect of x on click\n",
      "\n",
      "              OR     OR%  coefficient  std.error  z.value p.value     \n",
      "Intercept  0.004  -99.6%       -5.419      0.073  -74.156  < .001  ***\n",
      "imppat     1.000   -0.0%       -0.000      0.000   -4.802  < .001  ***\n",
      "clpat      1.002    0.2%        0.002      0.000    5.713  < .001  ***\n",
      "ctrpat     1.615   61.5%        0.479      0.034   13.933  < .001  ***\n",
      "\n",
      "Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n",
      "\n",
      "Pseudo R-squared (McFadden): 0.035\n",
      "Pseudo R-squared (McFadden adjusted): 0.035\n",
      "Area under the RO Curve (AUC): 0.676\n",
      "Log-likelihood: -4273.088, AIC: 8554.176, BIC: 8591.695\n",
      "Chi-squared: 314.248, df(3), p.value < 0.001 \n",
      "Nr obs: 87,535\n"
     ]
    }
   ],
   "source": [
    "clf_mc1 = rsm.model.logistic(\n",
    "    data= {\"tz_train\":tz_train},\n",
    "    rvar= \"click\",\n",
    "    lev= \"yes\",\n",
    "    evar= [\"imppat\", \"clpat\", \"ctrpat\"]\n",
    ")\n",
    "clf_mc1.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba6b49a0",
   "metadata": {},
   "source": [
    "### Chi-Square Citical Value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d98d14ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7.8147279032511765 11.34486673014437\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import chi2\n",
    "df=3\n",
    "alpha_0_05 = chi2.ppf(1-0.05,df)\n",
    "alpha_0_01= chi2.ppf(1-0.01,df)\n",
    "print(alpha_0_05,alpha_0_01)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0cecc9b2",
   "metadata": {},
   "source": [
    "### Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "82b713b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 960x768 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf_mc1.plot(\n",
    "    plots=\"pred\", incl=[\"imppat\", \"clpat\", \"ctrpat\"]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bebc9a2c",
   "metadata": {},
   "source": [
    "### Permutation Importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e012a8b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf_mc1.plot(plots=\"vimp\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83a94caf",
   "metadata": {},
   "source": [
    "### Interpretation\n",
    "\n",
    "For Odd Ratio, when you increase the ctrpat (click throgh put rate) by one unit, the odds of the outcome which is clicking increases by a factor of 1.615 or 61.5% while other variables remain constant.Meanwhile, a unit increase only by a factor of 1.002 for clpt (past clicks in a specific hour) and no effect on odd of clicking for the feature imppat (the number of past impression that showed a TZ ad)\n",
    "\n",
    "Using the coefficient and the plot, an increase in the number of past impression that showed a TZ ad(immpat) has a insignificant negative correlation(-0.00) with odds of clicking. This shows in both regression and plot. Then, there is a slight positive coeffecient(0.00) between clpat and the odds of clicking. Finally, we have considerable positive correlation(0.48) between ctrpat and the odds of clicking. Both of these shows in the plot as well. \n",
    "\n",
    " all p_values are less than 0.05 implies on the significant effect of imppat, ctrpat and clpat on the odds of clicking. In fact, they all have three asterisk which amplifies the level of statistical significance of these three variables.\n",
    "\n",
    "#### Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0ab417b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>imppat</th>\n",
       "      <th>clpat</th>\n",
       "      <th>ctrpat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>imppat</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.971579</td>\n",
       "      <td>0.344099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>clpat</th>\n",
       "      <td>0.971579</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.460035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ctrpat</th>\n",
       "      <td>0.344099</td>\n",
       "      <td>0.460035</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          imppat     clpat    ctrpat\n",
       "imppat  1.000000  0.971579  0.344099\n",
       "clpat   0.971579  1.000000  0.460035\n",
       "ctrpat  0.344099  0.460035  1.000000"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tz_train[['imppat', 'clpat', 'ctrpat']].corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b3f14a65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic regression (GLM)\n",
      "Data                 : tz_train\n",
      "Response variable    : click\n",
      "Level                : yes\n",
      "Explanatory variables: imppat, ctrpat\n",
      "Null hyp.: There is no effect of x on click\n",
      "Alt. hyp.: There is an effect of x on click\n",
      "\n",
      "              OR     OR%  coefficient  std.error  z.value p.value     \n",
      "Intercept  0.004  -99.6%       -5.529      0.068  -80.814  < .001  ***\n",
      "imppat     1.000    0.0%        0.000      0.000    5.460  < .001  ***\n",
      "ctrpat     1.733   73.3%        0.550      0.030   18.422  < .001  ***\n",
      "\n",
      "Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n",
      "\n",
      "Pseudo R-squared (McFadden): 0.031\n",
      "Pseudo R-squared (McFadden adjusted): 0.031\n",
      "Area under the RO Curve (AUC): 0.674\n",
      "Log-likelihood: -4290.903, AIC: 8587.805, BIC: 8615.945\n",
      "Chi-squared: 278.619, df(2), p.value < 0.001 \n",
      "Nr obs: 87,535\n"
     ]
    }
   ],
   "source": [
    "clf_mc2 = rsm.model.logistic(\n",
    "    data= {\"tz_train\": tz_train},\n",
    "    rvar = \"click\",\n",
    "    lev= \"yes\",\n",
    "    evar =[\"imppat\", \"ctrpat\"],\n",
    " )\n",
    "clf_mc2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b2308d23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 960x768 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf_mc2.plot(\"pred\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6cf2ef0",
   "metadata": {},
   "source": [
    "#### Interpretation\n",
    "\n",
    "The coefficient of ctrpat increased from 0.48 to 0.55, and the odds ratio rose from 61.5% to 73.3%. This suggests that removing clpat revealed the true impact of the remaining explanatory variables. While Pseudo R-Squared and AUC were not significantly affected, the predicted plot now shows a clearer relationship between the odds of clicking and the variables imppat and ctrpat. Since imppat and clpat have a high correlation of 0.97, multicollinearity exists, which can make coefficient estimates unstable and affect model interpretation. By omitting one of these highly correlated variables, we mitigate this issue, leading to a more interpretable model. This is evident in the plot, where the relationship between ctrpat, imppat, and the odds of clicking is now more clearly observed.\n",
    "\n",
    "#### Difference After Adding More Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "66cfa3f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic regression (GLM)\n",
      "Data                 : tz_train\n",
      "Response variable    : click\n",
      "Level                : yes\n",
      "Explanatory variables: time_fct, app, imppat, clpat, ctrpat\n",
      "Null hyp.: There is no effect of x on click\n",
      "Alt. hyp.: There is an effect of x on click\n",
      "\n",
      "                 OR      OR%  coefficient   std.error  z.value p.value     \n",
      "Intercept     0.012   -98.8%       -4.424       0.284  -15.575  < .001  ***\n",
      "time_fct[2]   0.588   -41.2%       -0.532       0.323   -1.644     0.1     \n",
      "time_fct[3]   0.693   -30.7%       -0.367       0.461   -0.795   0.426     \n",
      "time_fct[4]   0.000  -100.0%      -23.834   43904.903   -0.001     1.0     \n",
      "time_fct[5]   0.000  -100.0%      -23.860   57249.164   -0.000     1.0     \n",
      "time_fct[6]   0.359   -64.1%       -1.025       1.027   -0.999   0.318     \n",
      "time_fct[7]   1.220    22.0%        0.199       0.438    0.453    0.65     \n",
      "time_fct[8]   1.135    13.5%        0.127       0.309    0.411   0.681     \n",
      "time_fct[9]   1.063     6.3%        0.061       0.299    0.203   0.839     \n",
      "time_fct[10]  0.843   -15.7%       -0.170       0.303   -0.561   0.575     \n",
      "time_fct[11]  0.637   -36.3%       -0.451       0.288   -1.565   0.118     \n",
      "time_fct[12]  0.834   -16.6%       -0.181       0.292   -0.620   0.535     \n",
      "time_fct[13]  0.535   -46.5%       -0.626       0.306   -2.047   0.041    *\n",
      "time_fct[14]  0.982    -1.8%       -0.018       0.257   -0.069   0.945     \n",
      "time_fct[15]  0.840   -16.0%       -0.174       0.272   -0.639   0.523     \n",
      "time_fct[16]  0.874   -12.6%       -0.135       0.279   -0.483   0.629     \n",
      "time_fct[17]  0.864   -13.6%       -0.146       0.296   -0.493   0.622     \n",
      "time_fct[18]  0.942    -5.8%       -0.060       0.286   -0.208   0.835     \n",
      "time_fct[19]  1.178    17.8%        0.164       0.251    0.651   0.515     \n",
      "time_fct[20]  1.188    18.8%        0.172       0.247    0.698   0.485     \n",
      "time_fct[21]  0.782   -21.8%       -0.245       0.261   -0.942   0.346     \n",
      "time_fct[22]  0.933    -6.7%       -0.069       0.259   -0.267   0.789     \n",
      "time_fct[23]  0.993    -0.7%       -0.007       0.268   -0.025    0.98     \n",
      "time_fct[24]  1.134    13.4%        0.125       0.258    0.486   0.627     \n",
      "app[app2]     0.136   -86.4%       -1.997       0.351   -5.681  < .001  ***\n",
      "app[app3]     0.187   -81.3%       -1.675       1.016   -1.649   0.099    .\n",
      "app[app4]     0.487   -51.3%       -0.719       0.359   -2.004   0.045    *\n",
      "app[app5]     0.413   -58.7%       -0.883       1.011   -0.874   0.382     \n",
      "app[app6]     1.007     0.7%        0.007       0.216    0.034   0.973     \n",
      "app[app7]     0.708   -29.2%       -0.346       1.019   -0.340   0.734     \n",
      "app[app8]     0.000  -100.0%      -24.110   72717.593   -0.000     1.0     \n",
      "app[app9]     0.935    -6.5%       -0.067       0.271   -0.248   0.804     \n",
      "app[app10]    0.000  -100.0%      -24.021   75559.599   -0.000     1.0     \n",
      "app[app11]    1.365    36.5%        0.311       0.752    0.414   0.679     \n",
      "app[app12]    0.575   -42.5%       -0.553       0.274   -2.022   0.043    *\n",
      "app[app13]    2.790   179.0%        1.026       0.504    2.037   0.042    *\n",
      "app[app14]    0.246   -75.4%       -1.402       0.479   -2.927   0.003   **\n",
      "app[app15]    0.773   -22.7%       -0.258       0.723   -0.357   0.721     \n",
      "app[app16]    0.381   -61.9%       -0.965       0.733   -1.316   0.188     \n",
      "app[app17]    1.502    50.2%        0.407       0.727    0.560   0.576     \n",
      "app[app18]    0.108   -89.2%       -2.226       1.016   -2.190   0.029    *\n",
      "app[app19]    0.000  -100.0%      -24.046   93787.196   -0.000     1.0     \n",
      "app[app20]    0.000  -100.0%      -24.145   73366.877   -0.000     1.0     \n",
      "app[app21]    0.475   -52.5%       -0.744       0.416   -1.789   0.074    .\n",
      "app[app22]    0.517   -48.3%       -0.660       1.019   -0.648   0.517     \n",
      "app[app23]    3.549   254.9%        1.267       0.419    3.023   0.003   **\n",
      "app[app24]    2.411   141.1%        0.880       0.363    2.421   0.015    *\n",
      "app[app25]    1.571    57.1%        0.452       0.612    0.738    0.46     \n",
      "app[app26]    0.000  -100.0%      -24.073   63336.276   -0.000     1.0     \n",
      "app[app27]    0.292   -70.8%       -1.230       0.731   -1.683   0.092    .\n",
      "app[app28]    0.318   -68.2%       -1.144       0.603   -1.897   0.058    .\n",
      "app[app29]    2.584   158.4%        0.949       0.379    2.502   0.012    *\n",
      "app[app30]    0.000  -100.0%      -24.080   87078.077   -0.000     1.0     \n",
      "app[app31]    0.164   -83.6%       -1.808       0.735   -2.460   0.014    *\n",
      "app[app32]    0.000  -100.0%      -24.044   56046.291   -0.000     1.0     \n",
      "app[app33]    0.524   -47.6%       -0.647       0.376   -1.720   0.086    .\n",
      "app[app34]    0.000  -100.0%      -24.014   55897.140   -0.000     1.0     \n",
      "app[app35]    0.357   -64.3%       -1.030       1.019   -1.011   0.312     \n",
      "app[app36]    0.000  -100.0%      -24.001   78847.008   -0.000     1.0     \n",
      "app[app37]    0.741   -25.9%       -0.300       0.732   -0.410   0.682     \n",
      "app[app38]    0.000  -100.0%      -24.036   55273.917   -0.000     1.0     \n",
      "app[app39]    2.349   134.9%        0.854       0.449    1.904   0.057    .\n",
      "app[app40]    1.625    62.5%        0.486       0.530    0.915    0.36     \n",
      "app[app41]    0.816   -18.4%       -0.204       0.725   -0.281   0.779     \n",
      "app[app42]    2.909   190.9%        1.068       0.452    2.363   0.018    *\n",
      "app[app43]    0.000  -100.0%      -24.109   75901.133   -0.000     1.0     \n",
      "app[app44]    0.000  -100.0%      -24.047   46569.636   -0.001     1.0     \n",
      "app[app45]    1.920    92.0%        0.652       0.604    1.079   0.281     \n",
      "app[app46]    0.466   -53.4%       -0.763       1.020   -0.748   0.455     \n",
      "app[app47]    0.406   -59.4%       -0.902       1.012   -0.891   0.373     \n",
      "app[app48]    0.000  -100.0%      -24.045  106095.563   -0.000     1.0     \n",
      "app[app49]    0.259   -74.1%       -1.349       1.019   -1.324   0.185     \n",
      "imppat        1.000    -0.0%       -0.000       0.000   -1.131   0.258     \n",
      "clpat         1.001     0.1%        0.001       0.001    1.135   0.256     \n",
      "ctrpat        1.077     7.7%        0.075       0.117    0.637   0.524     \n",
      "\n",
      "Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n",
      "\n",
      "Pseudo R-squared (McFadden): 0.056\n",
      "Pseudo R-squared (McFadden adjusted): 0.04\n",
      "Area under the RO Curve (AUC): 0.704\n",
      "Log-likelihood: -4180.646, AIC: 8511.292, BIC: 9214.776\n",
      "Chi-squared: 499.132, df(74), p.value < 0.001 \n",
      "Nr obs: 87,535\n"
     ]
    }
   ],
   "source": [
    "clf_mc3 = rsm.model.logistic (\n",
    "    data = {\"tz_train\": tz_train},\n",
    "    rvar= \"click\",\n",
    "    lev= \"yes\",\n",
    "    evar=[\"time_fct\", \"app\", \"imppat\", \"clpat\", \"ctrpat\"]\n",
    ")\n",
    "\n",
    "clf_mc3.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "aa1c5137",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 960x960 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf_mc3.plot(\n",
    "    plots=\"pred\", incl=[\"time_fct\", \"app\", \"imppat\", \"clpat\", \"ctrpat\"]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab035fe3",
   "metadata": {},
   "source": [
    "#### Interpretation\n",
    "Introducing variables like time_fct and app into a logistic regression model with imppat, clpat, and ctrpat can alter prediction plots by changing the relationships between predictors and the outcome. These new variables may interact with existing ones, influencing both the direction and magnitude of effects. Additionally, they can act as confounder adjustments, revealing the true impact of imppat, clpat, and ctrpat on click likelihood by accounting for hidden biases. Conditioning effects may also emerge, as the behavior of existing predictors shifts in the presence of time_fct and app, leading to different probability estimates. Ultimately, these changes are reflected in prediction plots, which visually capture the refined relationships between predictors and the outcome, offering a clearer interpretation of the model's dynamics.\n",
    "\n",
    "### Decile Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b1333e1d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      training     inum click  time time_fct    app mobile_os  impup  clup  \\\n",
      "87535     test  I300002    no    21       21   app1   android   1458     3   \n",
      "87536     test  I300006    no     3        3  app40       ios      3     0   \n",
      "87537     test  I300012    no     5        5  app12   android   5057     6   \n",
      "87538     test  I300015    no    10       10   app1   android   1993    10   \n",
      "87539     test  I300016    no    14       14   app1       ios    212     7   \n",
      "\n",
      "          ctrup  ...     ctrut  imppat  clpat    ctrpat       rnd  pred_vneta  \\\n",
      "87535  0.205761  ...  0.000000   68113    957  1.405018  0.147891    0.003961   \n",
      "87536  0.000000  ...  0.000000      50      0  0.000000  0.383246    0.018965   \n",
      "87537  0.118647  ...  0.000000     754      8  1.061008  1.274485    0.003961   \n",
      "87538  0.501756  ...  0.000000   26537    276  1.040057  0.673022    0.003961   \n",
      "87539  3.301887  ...  5.263158   57348    874  1.524029 -0.785851    0.050679   \n",
      "\n",
      "             id    pred_logit  pred_rnd  pred_logit_dec  \n",
      "87535  id466983  1.020981e-02  0.008791               4  \n",
      "87536  id946375  8.665095e-03  0.008718               4  \n",
      "87537  id479295  1.910723e-14  0.008448              10  \n",
      "87538   id83284  6.240407e-03  0.008630               5  \n",
      "87539  id359434  1.233449e-02  0.009086               3  \n",
      "\n",
      "[5 rows x 25 columns]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_58081/1756994838.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  tz_test[\"pred_logit_dec\"] = (tz_test.groupby(\"training\").pred_logit.transform(rsm.xtile, 10, rev=True))\n"
     ]
    }
   ],
   "source": [
    "tz_test =tz_gaming[tz_gaming[\"training\"] == \"test\"]\n",
    "tz_test[\"pred_logit_dec\"] = (tz_test.groupby(\"training\").pred_logit.transform(rsm.xtile, 10, rev=True))\n",
    "print(tz_test.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f4260b47",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pred_logit_dec</th>\n",
       "      <th>nr_impressions</th>\n",
       "      <th>nr_clicks</th>\n",
       "      <th>ctr</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2796</td>\n",
       "      <td>103</td>\n",
       "      <td>0.036838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2793</td>\n",
       "      <td>48</td>\n",
       "      <td>0.017186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2788</td>\n",
       "      <td>42</td>\n",
       "      <td>0.015065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2796</td>\n",
       "      <td>30</td>\n",
       "      <td>0.010730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2802</td>\n",
       "      <td>15</td>\n",
       "      <td>0.005353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>2796</td>\n",
       "      <td>7</td>\n",
       "      <td>0.002504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2794</td>\n",
       "      <td>7</td>\n",
       "      <td>0.002505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2796</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>2796</td>\n",
       "      <td>4</td>\n",
       "      <td>0.001431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>2796</td>\n",
       "      <td>12</td>\n",
       "      <td>0.004292</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   pred_logit_dec  nr_impressions  nr_clicks       ctr\n",
       "0               1            2796        103  0.036838\n",
       "1               2            2793         48  0.017186\n",
       "2               3            2788         42  0.015065\n",
       "3               4            2796         30  0.010730\n",
       "4               5            2802         15  0.005353\n",
       "5               6            2796          7  0.002504\n",
       "6               7            2794          7  0.002505\n",
       "7               8            2796          3  0.001073\n",
       "8               9            2796          4  0.001431\n",
       "9              10            2796         12  0.004292"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dec_tab = (\n",
    "    tz_test.groupby('pred_logit_dec')\n",
    "    .agg(\n",
    "        nr_impressions= (\"pred_logit_dec\", \"size\"),\n",
    "        nr_clicks= (\"click\", lambda x: (x == \"yes\").sum()),\n",
    "    )\n",
    "    .assign( ctr= lambda x: x.nr_clicks / x.nr_impressions)\n",
    "    .reset_index()\n",
    ")\n",
    "dec_tab"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8eadc784",
   "metadata": {},
   "source": [
    "#### Bar Chart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "fe7c1c0e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 672x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      training     inum click  time time_fct    app mobile_os  impup  clup  \\\n",
      "0        train       I7    no     9        9   app8       ios    439     2   \n",
      "1        train      I23    no    15       15   app1       ios     64     0   \n",
      "2        train      I28    no    12       12   app5       ios     80     0   \n",
      "3        train      I30    no    19       19   app1       ios     25     0   \n",
      "4        train      I35    no    24       24   app1   android   3834    29   \n",
      "...        ...      ...   ...   ...      ...    ...       ...    ...   ...   \n",
      "87530    train  I299985    no    11       11   app2   android   1181     0   \n",
      "87531    train  I299986    no    10       10  app33       ios   1885     0   \n",
      "87532    train  I299990    no     1        1  app45       ios      8     0   \n",
      "87533    train  I299991    no     8        8   app1       ios    113     2   \n",
      "87534    train  I299995    no    18       18  app35   android     13     0   \n",
      "\n",
      "          ctrup  ...  clut     ctrut  imppat  clpat    ctrpat       rnd  \\\n",
      "0      0.455581  ...     0  0.000000      71      1  1.408451 -1.207066   \n",
      "1      0.000000  ...     0  0.000000   67312   1069  1.588127  0.277429   \n",
      "2      0.000000  ...     0  0.000000     331      1  0.302115  1.084441   \n",
      "3      0.000000  ...     0  0.000000   71114   1001  1.407599 -2.345698   \n",
      "4      0.756390  ...     4  1.215805  183852   2317  1.260253  0.429125   \n",
      "...         ...  ...   ...       ...     ...    ...       ...       ...   \n",
      "87530  0.000000  ...     0  0.000000    9625     14  0.145455 -0.249031   \n",
      "87531  0.000000  ...     0  0.000000     658      1  0.151976  0.770718   \n",
      "87532  0.000000  ...     0  0.000000     166      7  4.216867  0.181559   \n",
      "87533  1.769912  ...     0  0.000000   14245    158  1.109161 -1.263831   \n",
      "87534  0.000000  ...     1  7.142857     472      1  0.211864 -1.428302   \n",
      "\n",
      "       pred_vneta        id    pred_logit  pred_rnd  \n",
      "0        0.003961  id247135  3.382977e-13  0.009222  \n",
      "1        0.003961  id245079  1.156355e-02  0.008751  \n",
      "2        0.003961  id927245  2.655311e-03  0.008505  \n",
      "3        0.018965  id922188  1.349420e-02  0.009600  \n",
      "4        0.003961  id355833  1.868222e-03  0.008704  \n",
      "...           ...       ...           ...       ...  \n",
      "87530    0.003961  id565693  2.353185e-04  0.008915  \n",
      "87531    0.003961  id222657  8.101551e-04  0.008600  \n",
      "87532    0.018965  id340594  1.876022e-02  0.008781  \n",
      "87533    0.003961  id634151  9.397408e-03  0.009241  \n",
      "87534    0.050679  id280606  7.000647e-03  0.009294  \n",
      "\n",
      "[87535 rows x 24 columns]\n"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "bc= dec_tab.plot.bar(x=\"pred_logit_dec\", y=\"ctr\", legend=False)\n",
    "\n",
    "bc.set_xlabel('Decile')\n",
    "bc.set_ylabel (\"click through rate (CTR)\")\n",
    "bc.set_title (\"Click Through Rate by Decile\")\n",
    "bc.axhline(dec_tab[\"ctr\"].mean(), color='r', linestyle='--')\n",
    "\n",
    "plt.show()\n",
    "print(tz_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27efb4be",
   "metadata": {},
   "source": [
    "### Gain Curves"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "bd7a5a96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pred_logit_dec</th>\n",
       "      <th>nr_impressions</th>\n",
       "      <th>nr_clicks</th>\n",
       "      <th>ctr</th>\n",
       "      <th>cum_prop</th>\n",
       "      <th>cum_gains</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2796</td>\n",
       "      <td>103</td>\n",
       "      <td>0.036838</td>\n",
       "      <td>0.100025</td>\n",
       "      <td>0.380074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2793</td>\n",
       "      <td>48</td>\n",
       "      <td>0.017186</td>\n",
       "      <td>0.199943</td>\n",
       "      <td>0.557196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2788</td>\n",
       "      <td>42</td>\n",
       "      <td>0.015065</td>\n",
       "      <td>0.299682</td>\n",
       "      <td>0.712177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2796</td>\n",
       "      <td>30</td>\n",
       "      <td>0.010730</td>\n",
       "      <td>0.399707</td>\n",
       "      <td>0.822878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2802</td>\n",
       "      <td>15</td>\n",
       "      <td>0.005353</td>\n",
       "      <td>0.499946</td>\n",
       "      <td>0.878229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>2796</td>\n",
       "      <td>7</td>\n",
       "      <td>0.002504</td>\n",
       "      <td>0.599971</td>\n",
       "      <td>0.904059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2794</td>\n",
       "      <td>7</td>\n",
       "      <td>0.002505</td>\n",
       "      <td>0.699925</td>\n",
       "      <td>0.929889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2796</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001073</td>\n",
       "      <td>0.799950</td>\n",
       "      <td>0.940959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>2796</td>\n",
       "      <td>4</td>\n",
       "      <td>0.001431</td>\n",
       "      <td>0.899975</td>\n",
       "      <td>0.955720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>2796</td>\n",
       "      <td>12</td>\n",
       "      <td>0.004292</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   pred_logit_dec  nr_impressions  nr_clicks       ctr  cum_prop  cum_gains\n",
       "0               1            2796        103  0.036838  0.100025   0.380074\n",
       "1               2            2793         48  0.017186  0.199943   0.557196\n",
       "2               3            2788         42  0.015065  0.299682   0.712177\n",
       "3               4            2796         30  0.010730  0.399707   0.822878\n",
       "4               5            2802         15  0.005353  0.499946   0.878229\n",
       "5               6            2796          7  0.002504  0.599971   0.904059\n",
       "6               7            2794          7  0.002505  0.699925   0.929889\n",
       "7               8            2796          3  0.001073  0.799950   0.940959\n",
       "8               9            2796          4  0.001431  0.899975   0.955720\n",
       "9              10            2796         12  0.004292  1.000000   1.000000"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dec_tab[\"cum_prop\"]= dec_tab[\"nr_impressions\"].cumsum()/dec_tab[\"nr_impressions\"].sum()\n",
    "dec_tab[\"cum_gains\"]= dec_tab['nr_clicks'].cumsum()/dec_tab['nr_clicks'].sum()\n",
    "gains_tab = dec_tab\n",
    "gains_tab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "732c77a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 960x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(dec_tab['cum_prop'], dec_tab['cum_gains'], label='Cumulative Gains', drawstyle='steps-post')\n",
    "plt.plot([0, 1], [0, 1], 'k--', label='No Model')  \n",
    "\n",
    "# Labeling the plot\n",
    "plt.title('Cumulative Gains Chart')\n",
    "plt.xlabel('Cumulative Proportion of Impressions')\n",
    "plt.ylabel('Cumulative Gains')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Show the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4dea2add",
   "metadata": {},
   "source": [
    "### Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "198b3a71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.008"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cpm = 10 # cost per 1000 video impression\n",
    "conversion_rate= 0.05   # conversion to sign up with TZ after clicking on an ad\n",
    "clv= 25 # expected clv of customers that sign up with TZ after clicking on an ad\n",
    "\n",
    "threshold= (cpm/(conversion_rate * clv *1000))\n",
    "threshold"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "7824a449",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>training</th>\n",
       "      <th>inum</th>\n",
       "      <th>click</th>\n",
       "      <th>time</th>\n",
       "      <th>time_fct</th>\n",
       "      <th>app</th>\n",
       "      <th>mobile_os</th>\n",
       "      <th>impup</th>\n",
       "      <th>clup</th>\n",
       "      <th>ctrup</th>\n",
       "      <th>...</th>\n",
       "      <th>ctrut</th>\n",
       "      <th>imppat</th>\n",
       "      <th>clpat</th>\n",
       "      <th>ctrpat</th>\n",
       "      <th>rnd</th>\n",
       "      <th>pred_vneta</th>\n",
       "      <th>id</th>\n",
       "      <th>pred_logit</th>\n",
       "      <th>pred_rnd</th>\n",
       "      <th>click_yes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>87535</th>\n",
       "      <td>test</td>\n",
       "      <td>I300002</td>\n",
       "      <td>no</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>1458</td>\n",
       "      <td>3</td>\n",
       "      <td>0.205761</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>68113</td>\n",
       "      <td>957</td>\n",
       "      <td>1.405018</td>\n",
       "      <td>0.147891</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id466983</td>\n",
       "      <td>1.020981e-02</td>\n",
       "      <td>0.008791</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87536</th>\n",
       "      <td>test</td>\n",
       "      <td>I300006</td>\n",
       "      <td>no</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>app40</td>\n",
       "      <td>ios</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.383246</td>\n",
       "      <td>0.018965</td>\n",
       "      <td>id946375</td>\n",
       "      <td>8.665095e-03</td>\n",
       "      <td>0.008718</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87537</th>\n",
       "      <td>test</td>\n",
       "      <td>I300012</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>app12</td>\n",
       "      <td>android</td>\n",
       "      <td>5057</td>\n",
       "      <td>6</td>\n",
       "      <td>0.118647</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>754</td>\n",
       "      <td>8</td>\n",
       "      <td>1.061008</td>\n",
       "      <td>1.274485</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id479295</td>\n",
       "      <td>1.910723e-14</td>\n",
       "      <td>0.008448</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87538</th>\n",
       "      <td>test</td>\n",
       "      <td>I300015</td>\n",
       "      <td>no</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>1993</td>\n",
       "      <td>10</td>\n",
       "      <td>0.501756</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26537</td>\n",
       "      <td>276</td>\n",
       "      <td>1.040057</td>\n",
       "      <td>0.673022</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id83284</td>\n",
       "      <td>6.240407e-03</td>\n",
       "      <td>0.008630</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87539</th>\n",
       "      <td>test</td>\n",
       "      <td>I300016</td>\n",
       "      <td>no</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>212</td>\n",
       "      <td>7</td>\n",
       "      <td>3.301887</td>\n",
       "      <td>...</td>\n",
       "      <td>5.263158</td>\n",
       "      <td>57348</td>\n",
       "      <td>874</td>\n",
       "      <td>1.524029</td>\n",
       "      <td>-0.785851</td>\n",
       "      <td>0.050679</td>\n",
       "      <td>id359434</td>\n",
       "      <td>1.233449e-02</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115483</th>\n",
       "      <td>test</td>\n",
       "      <td>I399982</td>\n",
       "      <td>no</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>app2</td>\n",
       "      <td>ios</td>\n",
       "      <td>2110</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>23216</td>\n",
       "      <td>19</td>\n",
       "      <td>0.081840</td>\n",
       "      <td>-1.852059</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id847352</td>\n",
       "      <td>1.093091e-03</td>\n",
       "      <td>0.009435</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115484</th>\n",
       "      <td>test</td>\n",
       "      <td>I399986</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>app14</td>\n",
       "      <td>android</td>\n",
       "      <td>291</td>\n",
       "      <td>1</td>\n",
       "      <td>0.343643</td>\n",
       "      <td>...</td>\n",
       "      <td>1.351351</td>\n",
       "      <td>3665</td>\n",
       "      <td>14</td>\n",
       "      <td>0.381992</td>\n",
       "      <td>-0.296415</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id457437</td>\n",
       "      <td>3.609483e-03</td>\n",
       "      <td>0.008930</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115485</th>\n",
       "      <td>test</td>\n",
       "      <td>I399991</td>\n",
       "      <td>no</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>364</td>\n",
       "      <td>3</td>\n",
       "      <td>0.824176</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>173353</td>\n",
       "      <td>2292</td>\n",
       "      <td>1.322158</td>\n",
       "      <td>0.099201</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id792352</td>\n",
       "      <td>2.052670e-02</td>\n",
       "      <td>0.008806</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115486</th>\n",
       "      <td>test</td>\n",
       "      <td>I399992</td>\n",
       "      <td>no</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>app6</td>\n",
       "      <td>android</td>\n",
       "      <td>59</td>\n",
       "      <td>2</td>\n",
       "      <td>3.389831</td>\n",
       "      <td>...</td>\n",
       "      <td>2.702703</td>\n",
       "      <td>3474</td>\n",
       "      <td>53</td>\n",
       "      <td>1.525619</td>\n",
       "      <td>-0.186421</td>\n",
       "      <td>0.050679</td>\n",
       "      <td>id115678</td>\n",
       "      <td>2.192207e-02</td>\n",
       "      <td>0.008896</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115487</th>\n",
       "      <td>test</td>\n",
       "      <td>I399994</td>\n",
       "      <td>no</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>498</td>\n",
       "      <td>7</td>\n",
       "      <td>1.405622</td>\n",
       "      <td>...</td>\n",
       "      <td>1.886792</td>\n",
       "      <td>77884</td>\n",
       "      <td>1201</td>\n",
       "      <td>1.542037</td>\n",
       "      <td>0.857281</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id705546</td>\n",
       "      <td>1.170346e-02</td>\n",
       "      <td>0.008574</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>27953 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       training     inum click  time time_fct    app mobile_os  impup  clup  \\\n",
       "87535      test  I300002    no    21       21   app1   android   1458     3   \n",
       "87536      test  I300006    no     3        3  app40       ios      3     0   \n",
       "87537      test  I300012    no     5        5  app12   android   5057     6   \n",
       "87538      test  I300015    no    10       10   app1   android   1993    10   \n",
       "87539      test  I300016    no    14       14   app1       ios    212     7   \n",
       "...         ...      ...   ...   ...      ...    ...       ...    ...   ...   \n",
       "115483     test  I399982    no    21       21   app2       ios   2110     0   \n",
       "115484     test  I399986    no    17       17  app14   android    291     1   \n",
       "115485     test  I399991    no    23       23   app1   android    364     3   \n",
       "115486     test  I399992    no    20       20   app6   android     59     2   \n",
       "115487     test  I399994    no    18       18   app1       ios    498     7   \n",
       "\n",
       "           ctrup  ...     ctrut  imppat  clpat    ctrpat       rnd  \\\n",
       "87535   0.205761  ...  0.000000   68113    957  1.405018  0.147891   \n",
       "87536   0.000000  ...  0.000000      50      0  0.000000  0.383246   \n",
       "87537   0.118647  ...  0.000000     754      8  1.061008  1.274485   \n",
       "87538   0.501756  ...  0.000000   26537    276  1.040057  0.673022   \n",
       "87539   3.301887  ...  5.263158   57348    874  1.524029 -0.785851   \n",
       "...          ...  ...       ...     ...    ...       ...       ...   \n",
       "115483  0.000000  ...  0.000000   23216     19  0.081840 -1.852059   \n",
       "115484  0.343643  ...  1.351351    3665     14  0.381992 -0.296415   \n",
       "115485  0.824176  ...  0.000000  173353   2292  1.322158  0.099201   \n",
       "115486  3.389831  ...  2.702703    3474     53  1.525619 -0.186421   \n",
       "115487  1.405622  ...  1.886792   77884   1201  1.542037  0.857281   \n",
       "\n",
       "        pred_vneta        id    pred_logit  pred_rnd  click_yes  \n",
       "87535     0.003961  id466983  1.020981e-02  0.008791        0.0  \n",
       "87536     0.018965  id946375  8.665095e-03  0.008718        0.0  \n",
       "87537     0.003961  id479295  1.910723e-14  0.008448        0.0  \n",
       "87538     0.003961   id83284  6.240407e-03  0.008630        0.0  \n",
       "87539     0.050679  id359434  1.233449e-02  0.009086        0.0  \n",
       "...            ...       ...           ...       ...        ...  \n",
       "115483    0.003961  id847352  1.093091e-03  0.009435        0.0  \n",
       "115484    0.003961  id457437  3.609483e-03  0.008930        0.0  \n",
       "115485    0.003961  id792352  2.052670e-02  0.008806        0.0  \n",
       "115486    0.050679  id115678  2.192207e-02  0.008896        0.0  \n",
       "115487    0.003961  id705546  1.170346e-02  0.008574        0.0  \n",
       "\n",
       "[27953 rows x 25 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tz_test = tz_gaming[tz_gaming[\"training\"] == \"test\"].copy()\n",
    "\n",
    "tz_test[\"click_yes\"]= tz_test[\"click\"].apply(lambda x: 1 if x == \"yes\" else 0 if x == \"no\" else np.nan)\n",
    "\n",
    "tz_test[\"click_yes\"] = tz_test[\"click_yes\"].astype(float)\n",
    "\n",
    "\n",
    "tz_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "0b02b93c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>label</th>\n",
       "      <th>nr</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>TP</td>\n",
       "      <td>221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FP</td>\n",
       "      <td>10661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TN</td>\n",
       "      <td>17021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FN</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  label     nr\n",
       "0    TP    221\n",
       "1    FP  10661\n",
       "2    TN  17021\n",
       "3    FN     50"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TP = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_logit\"]> threshold) & (tz_test[\"click_yes\"] == 1)).sum()\n",
    "FP = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_logit\"]> threshold) & (tz_test[\"click_yes\"] == 0)).sum()\n",
    "TN = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_logit\"]<= threshold) & (tz_test[\"click_yes\"] == 0)).sum()\n",
    "FN = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_logit\"]<= threshold) & (tz_test[\"click_yes\"] == 1)).sum()\n",
    "\n",
    "cm_logit = pd.DataFrame(\n",
    "    {\n",
    "        \"label\": [\"TP\", \"FP\", \"TN\", \"FN\"],\n",
    "        \"nr\" : [TP, FP, TN, FN]# TP, FP, TN, and FN values in that order\n",
    "    }\n",
    ")\n",
    "cm_logit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3886b8a0",
   "metadata": {},
   "source": [
    "#### Accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "4ea88d81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "np.float64(0.6168210925482059)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_logit = (TP + TN) / (TP + TN + FP + FN)# float\n",
    "accuracy_logit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8309152",
   "metadata": {},
   "source": [
    "#### Confusion Matrix Based on Pred_RND"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "be7dcc09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>label</th>\n",
       "      <th>nr</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>TP</td>\n",
       "      <td>271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FP</td>\n",
       "      <td>27606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TN</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  label     nr\n",
       "0    TP    271\n",
       "1    FP  27606\n",
       "2    TN     76\n",
       "3    FN      0"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TP = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_rnd\"]> threshold) & (tz_test[\"click_yes\"] == 1)).sum()\n",
    "FP = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_rnd\"]> threshold) & (tz_test[\"click_yes\"] == 0)).sum()\n",
    "TN = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_rnd\"]<= threshold) & (tz_test[\"click_yes\"] == 0)).sum()\n",
    "FN = ((tz_test[\"training\"] == \"test\") & (tz_test[\"pred_rnd\"]<= threshold) & (tz_test[\"click_yes\"] == 1)).sum()\n",
    "\n",
    "\n",
    "cm_rnd = pd.DataFrame(\n",
    "    {\n",
    "        \"label\": [\"TP\", \"FP\", \"TN\", \"FN\"],\n",
    "        \"nr\": [TP, FP, TN, FN]# TP, FP, TN, and FN values in that order\n",
    "    }\n",
    ")\n",
    "cm_rnd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83fdbed7",
   "metadata": {},
   "source": [
    "### Accuracy Based on Pred_RND Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "47989f41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "np.float64(0.012413694415626229)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_rnd = (TP + TN) / (TP + TN + FP + FN)# float\n",
    "accuracy_rnd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0270287",
   "metadata": {},
   "source": [
    "#### Summary and Interpretation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "93e21214",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Metric  First Model        RND\n",
      "         TP     271.0000     0.0000\n",
      "         FP   27606.0000     0.0000\n",
      "         TN      76.0000 27682.0000\n",
      "         FN       0.0000   271.0000\n",
      "   Accuracy       0.0124     0.9903\n",
      "  Precision       0.0097     0.0000\n",
      "     Recall       1.0000     0.0000\n",
      "Specificity       0.0027     1.0000\n",
      "   F1 Score       0.0193     0.0000\n"
     ]
    }
   ],
   "source": [
    "first_model = {\n",
    "    \"TP\": 271,\n",
    "    \"FP\": 27606,\n",
    "    \"TN\": 76,\n",
    "    \"FN\": 0\n",
    "}\n",
    "\n",
    "rnd_model = {\n",
    "    \"TP\": 0,\n",
    "    \"FP\": 0,\n",
    "    \"TN\": 27682,\n",
    "    \"FN\": 271\n",
    "}\n",
    "\n",
    "def compute_metrics(cm):\n",
    "    TP = cm[\"TP\"]\n",
    "    FP = cm[\"FP\"]\n",
    "    TN = cm[\"TN\"]\n",
    "    FN = cm[\"FN\"]\n",
    "    total = TP + FP + TN + FN\n",
    "\n",
    "    accuracy = (TP + TN) / total\n",
    "    precision = TP / (TP + FP) if (TP + FP) > 0 else 0\n",
    "    recall = TP / (TP + FN) if (TP + FN) > 0 else 0\n",
    "    specificity = TN / (TN + FP) if (TN + FP) > 0 else 0\n",
    "    f1_score = (2 * precision * recall) / (precision + recall) if (precision + recall) > 0 else 0\n",
    "\n",
    "    return {\n",
    "        \"TP\": TP,\n",
    "        \"FP\": FP,\n",
    "        \"TN\": TN,\n",
    "        \"FN\": FN,\n",
    "        \"Accuracy\": round(accuracy, 4),\n",
    "        \"Precision\": round(precision, 4),\n",
    "        \"Recall\": round(recall, 4),\n",
    "        \"Specificity\": round(specificity, 4),\n",
    "        \"F1 Score\": round(f1_score, 4)\n",
    "    }\n",
    "\n",
    "first_metrics = compute_metrics(first_model)\n",
    "rnd_metrics = compute_metrics(rnd_model)\n",
    "\n",
    "results_df = pd.DataFrame({\n",
    "    \"Metric\": list(first_metrics.keys()),\n",
    "    \"First Model\": list(first_metrics.values()),\n",
    "    \"RND\": list(rnd_metrics.values())\n",
    "})\n",
    "\n",
    "print(results_df.to_string(index=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42fa645d",
   "metadata": {},
   "source": [
    "The First Model correctly identified all 271 true positives, achieving 100% recall but only 0.97% precision due to 27,606 false positives. In contrast, the RND model predicted no positives, resulting in perfect specificity and 99.02% accuracy, but 0% recall and no ability to detect actual clicks. Although the First Model's accuracy was just 1.03%, it was more useful than the RND model because it captured all true click events. However, its extremely low precision highlights inefficiency, as most predicted clicks were incorrect. This comparison shows that in imbalanced datasets, metrics like precision, recall, and F1 score are more informative than accuracy alone\n",
    "\n",
    "\n",
    "### Model Comparison\n",
    "\n",
    "#### Cost Information\n",
    "* Cost per 1,000 video impressions (CPM) is $10\n",
    "* Conversion to sign-up as a TZ game player after clicking on an ad is 5%\n",
    "* The expected CLV of customers that sign-up with TZ after clicking on an ad is approximately $25\n",
    "* The total cost of the data from Vneta is $50K\n",
    "* The total cost charged for the data science consulting services by Vneta is $150K"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "ab1b296a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.008"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cpm = 10 # cost per 1000 video impression\n",
    "conversion_rate= 0.05   # conversion to sign up with TZ after clicking on an ad\n",
    "clv= 25 # expected clv of customers that sign up with TZ after clicking on an ad\n",
    "total_impressions = 20_000_000 # given in the problem above\n",
    "additional_cost_VNETA = 50_000 # cost of the data from VNETA DATA\n",
    "additional_cost_Consulting= 150_000 #cost of thr consulting services by VNETA\n",
    "additional_cost_spamming= 0 #cost for spamming with no VNETA involve\n",
    "\n",
    "def calculate_break_even_response_rate(cpm,conversion_rate, clv, total_impressions,additional_cost):\n",
    "    total_cost = (total_impressions/1000) *cpm +additional_cost\n",
    "    margin = total_impressions * conversion_rate * clv\n",
    "    break_even_rate_of_response= total_cost/margin\n",
    "    return break_even_rate_of_response\n",
    "\n",
    "break_even_response_rate_spamming= calculate_break_even_response_rate(cpm,conversion_rate, clv, total_impressions, additional_cost_spamming)\n",
    "break_even_response_rate_spamming"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "056acfa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>training</th>\n",
       "      <th>inum</th>\n",
       "      <th>click</th>\n",
       "      <th>time</th>\n",
       "      <th>time_fct</th>\n",
       "      <th>app</th>\n",
       "      <th>mobile_os</th>\n",
       "      <th>impup</th>\n",
       "      <th>clup</th>\n",
       "      <th>ctrup</th>\n",
       "      <th>...</th>\n",
       "      <th>ctrpat</th>\n",
       "      <th>rnd</th>\n",
       "      <th>pred_vneta</th>\n",
       "      <th>id</th>\n",
       "      <th>pred_logit</th>\n",
       "      <th>pred_rnd</th>\n",
       "      <th>click_yes</th>\n",
       "      <th>target_logit</th>\n",
       "      <th>target_rnd</th>\n",
       "      <th>target_vneta</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>87535</th>\n",
       "      <td>test</td>\n",
       "      <td>I300002</td>\n",
       "      <td>no</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>1458</td>\n",
       "      <td>3</td>\n",
       "      <td>0.205761</td>\n",
       "      <td>...</td>\n",
       "      <td>1.405018</td>\n",
       "      <td>0.147891</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id466983</td>\n",
       "      <td>1.020981e-02</td>\n",
       "      <td>0.008791</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87536</th>\n",
       "      <td>test</td>\n",
       "      <td>I300006</td>\n",
       "      <td>no</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>app40</td>\n",
       "      <td>ios</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.383246</td>\n",
       "      <td>0.018965</td>\n",
       "      <td>id946375</td>\n",
       "      <td>8.665095e-03</td>\n",
       "      <td>0.008718</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87537</th>\n",
       "      <td>test</td>\n",
       "      <td>I300012</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>app12</td>\n",
       "      <td>android</td>\n",
       "      <td>5057</td>\n",
       "      <td>6</td>\n",
       "      <td>0.118647</td>\n",
       "      <td>...</td>\n",
       "      <td>1.061008</td>\n",
       "      <td>1.274485</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id479295</td>\n",
       "      <td>1.910723e-14</td>\n",
       "      <td>0.008448</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87538</th>\n",
       "      <td>test</td>\n",
       "      <td>I300015</td>\n",
       "      <td>no</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>1993</td>\n",
       "      <td>10</td>\n",
       "      <td>0.501756</td>\n",
       "      <td>...</td>\n",
       "      <td>1.040057</td>\n",
       "      <td>0.673022</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id83284</td>\n",
       "      <td>6.240407e-03</td>\n",
       "      <td>0.008630</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87539</th>\n",
       "      <td>test</td>\n",
       "      <td>I300016</td>\n",
       "      <td>no</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>212</td>\n",
       "      <td>7</td>\n",
       "      <td>3.301887</td>\n",
       "      <td>...</td>\n",
       "      <td>1.524029</td>\n",
       "      <td>-0.785851</td>\n",
       "      <td>0.050679</td>\n",
       "      <td>id359434</td>\n",
       "      <td>1.233449e-02</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115483</th>\n",
       "      <td>test</td>\n",
       "      <td>I399982</td>\n",
       "      <td>no</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>app2</td>\n",
       "      <td>ios</td>\n",
       "      <td>2110</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.081840</td>\n",
       "      <td>-1.852059</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id847352</td>\n",
       "      <td>1.093091e-03</td>\n",
       "      <td>0.009435</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115484</th>\n",
       "      <td>test</td>\n",
       "      <td>I399986</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>app14</td>\n",
       "      <td>android</td>\n",
       "      <td>291</td>\n",
       "      <td>1</td>\n",
       "      <td>0.343643</td>\n",
       "      <td>...</td>\n",
       "      <td>0.381992</td>\n",
       "      <td>-0.296415</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id457437</td>\n",
       "      <td>3.609483e-03</td>\n",
       "      <td>0.008930</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115485</th>\n",
       "      <td>test</td>\n",
       "      <td>I399991</td>\n",
       "      <td>no</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>app1</td>\n",
       "      <td>android</td>\n",
       "      <td>364</td>\n",
       "      <td>3</td>\n",
       "      <td>0.824176</td>\n",
       "      <td>...</td>\n",
       "      <td>1.322158</td>\n",
       "      <td>0.099201</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id792352</td>\n",
       "      <td>2.052670e-02</td>\n",
       "      <td>0.008806</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115486</th>\n",
       "      <td>test</td>\n",
       "      <td>I399992</td>\n",
       "      <td>no</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>app6</td>\n",
       "      <td>android</td>\n",
       "      <td>59</td>\n",
       "      <td>2</td>\n",
       "      <td>3.389831</td>\n",
       "      <td>...</td>\n",
       "      <td>1.525619</td>\n",
       "      <td>-0.186421</td>\n",
       "      <td>0.050679</td>\n",
       "      <td>id115678</td>\n",
       "      <td>2.192207e-02</td>\n",
       "      <td>0.008896</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115487</th>\n",
       "      <td>test</td>\n",
       "      <td>I399994</td>\n",
       "      <td>no</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>app1</td>\n",
       "      <td>ios</td>\n",
       "      <td>498</td>\n",
       "      <td>7</td>\n",
       "      <td>1.405622</td>\n",
       "      <td>...</td>\n",
       "      <td>1.542037</td>\n",
       "      <td>0.857281</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>id705546</td>\n",
       "      <td>1.170346e-02</td>\n",
       "      <td>0.008574</td>\n",
       "      <td>0.0</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>27953 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       training     inum click  time time_fct    app mobile_os  impup  clup  \\\n",
       "87535      test  I300002    no    21       21   app1   android   1458     3   \n",
       "87536      test  I300006    no     3        3  app40       ios      3     0   \n",
       "87537      test  I300012    no     5        5  app12   android   5057     6   \n",
       "87538      test  I300015    no    10       10   app1   android   1993    10   \n",
       "87539      test  I300016    no    14       14   app1       ios    212     7   \n",
       "...         ...      ...   ...   ...      ...    ...       ...    ...   ...   \n",
       "115483     test  I399982    no    21       21   app2       ios   2110     0   \n",
       "115484     test  I399986    no    17       17  app14   android    291     1   \n",
       "115485     test  I399991    no    23       23   app1   android    364     3   \n",
       "115486     test  I399992    no    20       20   app6   android     59     2   \n",
       "115487     test  I399994    no    18       18   app1       ios    498     7   \n",
       "\n",
       "           ctrup  ...    ctrpat       rnd  pred_vneta        id    pred_logit  \\\n",
       "87535   0.205761  ...  1.405018  0.147891    0.003961  id466983  1.020981e-02   \n",
       "87536   0.000000  ...  0.000000  0.383246    0.018965  id946375  8.665095e-03   \n",
       "87537   0.118647  ...  1.061008  1.274485    0.003961  id479295  1.910723e-14   \n",
       "87538   0.501756  ...  1.040057  0.673022    0.003961   id83284  6.240407e-03   \n",
       "87539   3.301887  ...  1.524029 -0.785851    0.050679  id359434  1.233449e-02   \n",
       "...          ...  ...       ...       ...         ...       ...           ...   \n",
       "115483  0.000000  ...  0.081840 -1.852059    0.003961  id847352  1.093091e-03   \n",
       "115484  0.343643  ...  0.381992 -0.296415    0.003961  id457437  3.609483e-03   \n",
       "115485  0.824176  ...  1.322158  0.099201    0.003961  id792352  2.052670e-02   \n",
       "115486  3.389831  ...  1.525619 -0.186421    0.050679  id115678  2.192207e-02   \n",
       "115487  1.405622  ...  1.542037  0.857281    0.003961  id705546  1.170346e-02   \n",
       "\n",
       "        pred_rnd  click_yes  target_logit  target_rnd  target_vneta  \n",
       "87535   0.008791        0.0          True        True         False  \n",
       "87536   0.008718        0.0          True        True          True  \n",
       "87537   0.008448        0.0         False        True         False  \n",
       "87538   0.008630        0.0         False        True         False  \n",
       "87539   0.009086        0.0          True        True          True  \n",
       "...          ...        ...           ...         ...           ...  \n",
       "115483  0.009435        0.0         False        True         False  \n",
       "115484  0.008930        0.0         False        True         False  \n",
       "115485  0.008806        0.0          True        True         False  \n",
       "115486  0.008896        0.0          True        True          True  \n",
       "115487  0.008574        0.0          True        True         False  \n",
       "\n",
       "[27953 rows x 28 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tz_gaming= tz_test\n",
    "tz_gaming[\"target_logit\"] = tz_gaming[\"pred_logit\"] > break_even_response_rate_spamming\n",
    "tz_gaming[\"target_rnd\"] = tz_gaming[\"pred_rnd\"]> break_even_response_rate_spamming\n",
    "tz_gaming[\"target_vneta\"]= tz_gaming[\"pred_vneta\"] >break_even_response_rate_spamming\n",
    "tz_gaming"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28a45c1f",
   "metadata": {},
   "source": [
    "#### Spamming"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f14304e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "59.22000000000003 0.21185561478195555\n"
     ]
    }
   ],
   "source": [
    "total_succesful_clicks= tz_gaming[(tz_gaming[\"click_yes\"]== 1)].shape[0]\n",
    "total_succesful_clicks\n",
    "total_costs = (tz_gaming.shape[0]/1000)*cpm\n",
    "total_costs\n",
    "total_revenue= total_succesful_clicks*conversion_rate*clv\n",
    "total_revenue\n",
    "profit_spam =total_revenue- total_costs\n",
    "profit_spam\n",
    "rome_spam= (profit_spam/total_costs)\n",
    "rome_spam\n",
    "print(profit_spam, rome_spam)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b1aee28",
   "metadata": {},
   "source": [
    "#### LOGIT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "19f1adf9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "167.43 1.5385958463517737\n"
     ]
    }
   ],
   "source": [
    "total_succesful_clicks = tz_gaming[(tz_gaming[\"target_logit\"] == True) & (tz_gaming[\"click_yes\"]== 1)].shape[0]\n",
    "total_succesful_clicks\n",
    "total_costs = (tz_gaming[(tz_gaming[\"target_logit\"]== True)].shape[0]/1000)*cpm\n",
    "total_costs\n",
    "total_revenue= total_succesful_clicks*conversion_rate*clv\n",
    "total_revenue\n",
    "profit_logit =total_revenue- total_costs\n",
    "profit_logit\n",
    "rome_logit= (profit_logit/total_costs)\n",
    "rome_logit\n",
    "print(profit_logit, rome_logit)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a969ccc",
   "metadata": {},
   "source": [
    "#### RND"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "09a47d61",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "59.98000000000002 0.21515945044301762\n"
     ]
    }
   ],
   "source": [
    "total_succesful_clicks = tz_gaming[(tz_gaming[\"target_rnd\"] == True) & (tz_gaming[\"click_yes\"]== 1)].shape[0]\n",
    "total_succesful_clicks\n",
    "total_costs = (tz_gaming[(tz_gaming[\"target_rnd\"]== True)].shape[0]/1000)*cpm\n",
    "total_costs\n",
    "total_revenue= total_succesful_clicks*conversion_rate*clv\n",
    "total_revenue\n",
    "profit_rnd =total_revenue- total_costs\n",
    "profit_rnd\n",
    "rome_rnd= (profit_rnd/total_costs)\n",
    "rome_rnd\n",
    "print(profit_rnd, rome_rnd)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20f5f4af",
   "metadata": {},
   "source": [
    "#### VNETA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "e6b9b2d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "151.29 3.1059330732909047\n"
     ]
    }
   ],
   "source": [
    "total_succesful_clicks = tz_gaming[(tz_gaming[\"target_vneta\"] == True) & (tz_gaming[\"click_yes\"]== 1)].shape[0]\n",
    "total_succesful_clicks\n",
    "total_costs = (tz_gaming[(tz_gaming[\"target_vneta\"]== True)].shape[0]/1000)*cpm\n",
    "total_costs\n",
    "total_revenue= total_succesful_clicks*conversion_rate*clv\n",
    "total_revenue\n",
    "profit_vneta =total_revenue- total_costs\n",
    "profit_vneta\n",
    "rome_vneta= (profit_vneta/total_costs)\n",
    "rome_vneta\n",
    "print(profit_vneta, rome_vneta)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6ad9b2f",
   "metadata": {},
   "source": [
    "#### Summary\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "bddd6d2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>model</th>\n",
       "      <th>profit</th>\n",
       "      <th>ROME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>logit</td>\n",
       "      <td>167.43</td>\n",
       "      <td>1.538596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>rnd</td>\n",
       "      <td>59.98</td>\n",
       "      <td>0.215159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>vneta</td>\n",
       "      <td>151.29</td>\n",
       "      <td>3.105933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>spam</td>\n",
       "      <td>59.22</td>\n",
       "      <td>0.211856</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   model  profit      ROME\n",
       "0  logit  167.43  1.538596\n",
       "1    rnd   59.98  0.215159\n",
       "2  vneta  151.29  3.105933\n",
       "3   spam   59.22  0.211856"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tz_gaming[\"pred_spam\"] = 1\n",
    "tz_gaming[\"target_spam\"] = True\n",
    "\n",
    "mod_perf = pd.DataFrame(\n",
    "    {\n",
    "        \"model\": [\n",
    "            \"logit\",\n",
    "            \"rnd\",\n",
    "            \"vneta\",\n",
    "            \"spam\",\n",
    "        ],\n",
    "        \"profit\": [profit_logit, profit_rnd, profit_vneta, profit_spam],\n",
    "        \"ROME\": [rome_logit, rome_rnd, rome_vneta, rome_spam],\n",
    "    }\n",
    ")\n",
    "mod_perf"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "030cdff7",
   "metadata": {},
   "source": [
    "#### Analysis\n",
    "The Vneta model demonstrates the highest ROME at 3.105933, making it the most efficient in marketing budget utilization. It generates a profit of 151.29, slightly lower than the Logit model but still highly effective. This model is ideal for scenarios where marketing efficiency and budget allocation are top priorities. On the other hand, the Logit model achieves the highest profit of 167.43, though its ROME is lower than that of the Vneta model, indicating reduced spending efficiency. It is best suited for cases where maximizing total profit is more important than efficiency. In contrast, both the Rnd and Spam models underperform in terms of profit and ROME compared to predictive models, suggesting that predictive strategies significantly outperform non-targeted methods. Overall, the Vneta model is recommended for its superior marketing efficiency, while the Logit model is preferred for maximizing profit. The choice between these two depends on whether ROI or total profit is the primary objective.\n",
    "\n",
    "### Profit Comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "74741330",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(119793.93982756771, 42914.89285586521, 108245.98433084105, 42371.12295639111)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_impressions_purchased = 20_000_000\n",
    "test_sample= tz_gaming.shape[0]\n",
    "test_sample\n",
    "logit = (profit_logit /test_sample)* total_impressions_purchased\n",
    "rnd= (profit_rnd/test_sample) * total_impressions_purchased\n",
    "vneta= (profit_vneta/test_sample) * total_impressions_purchased\n",
    "spam= (profit_spam/test_sample) * total_impressions_purchased\n",
    "\n",
    "logit, rnd, vneta, spam"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bb508bed",
   "metadata": {},
   "source": [
    "### ROME Comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "e87d5a6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1100.8448798710506, 429.7232120657449, 2222.2538355746465, 1100.8448798710506)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_costs = (tz_gaming[(tz_gaming[\"target_logit\"]== True)].shape[0]/1000)*cpm\n",
    "rome_logit = logit/total_costs\n",
    "\n",
    "total_costs = (tz_gaming[(tz_gaming[\"target_rnd\"]== True)].shape[0]/1000)*cpm\n",
    "rome_rnd= logit/total_costs\n",
    "\n",
    "total_costs = (tz_gaming[(tz_gaming[\"target_vneta\"]== True)].shape[0]/1000)*cpm\n",
    "rome_vneta = vneta/total_costs\n",
    "\n",
    "total_costs = (tz_gaming.shape[0]/1000)*cpm\n",
    "rome_spam = spam/total_costs \n",
    "\n",
    "rome_logit, rome_rnd, rome_vneta, rome_logit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5b8abf7",
   "metadata": {},
   "source": [
    "#### Profit and ROME Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3d5e30c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>model</th>\n",
       "      <th>profit</th>\n",
       "      <th>ROME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>logit</td>\n",
       "      <td>119793.939828</td>\n",
       "      <td>1100.844880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>rnd</td>\n",
       "      <td>42914.892856</td>\n",
       "      <td>429.723212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>vneta</td>\n",
       "      <td>108245.984331</td>\n",
       "      <td>2222.253836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>spam</td>\n",
       "      <td>42371.122956</td>\n",
       "      <td>151.579877</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   model         profit         ROME\n",
       "0  logit  119793.939828  1100.844880\n",
       "1    rnd   42914.892856   429.723212\n",
       "2  vneta  108245.984331  2222.253836\n",
       "3   spam   42371.122956   151.579877"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mod_perf_20M = pd.DataFrame(\n",
    "    {\n",
    "        \"model\": [\n",
    "            \"logit\",\n",
    "            \"rnd\",\n",
    "            \"vneta\",\n",
    "            \"spam\",\n",
    "        ],\n",
    "        \"profit\": [logit, rnd, vneta, spam],\n",
    "        \"ROME\": [rome_logit, rome_rnd, rome_vneta, rome_spam],\n",
    "    }\n",
    ")\n",
    "mod_perf_20M"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e3759b0",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "The Logit model leads in profit generation with $119,793.94, making it the top choice for revenue maximization, though its ROME stands at 1100.84, which, while strong, is not the highest. The Rnd model lags behind with a profit of $42,914.89 and a ROME of 429.73, reflecting lower efficiency and profitability. Similarly, the Spam model records $42,371.12 in profit, closely matching the Rnd model, but has the lowest ROME at 151.579877, making it the least effective approach. The Vneta model, on the other hand, secures a high profit of $108,245.98 and boasts the highest ROME at 2222.253, demonstrating superior marketing efficiency. This makes Vneta the optimal choice for balancing profit and marketing spend efficiency. Given its outstanding ROME, the Vneta model is the primary recommendation for maximizing investment returns. However, the Logit model remains a solid alternative for cases where absolute profit takes precedence over efficiency. The new data aligns with previous recommendations, reaffirming Vneta’s leadership in efficiency despite slightly lower profits than the Logit model. The results confirm that predictive models significantly outperform non-targeted approaches like the Rnd and Spam models. Ultimately, the Vneta model is best for those prioritizing a balance of high profit and peak efficiency, while the Logit model is the go-to option for pure profit maximization.  "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/opt/conda/share/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
