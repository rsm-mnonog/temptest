[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "My Projects",
    "section": "",
    "text": "Homework 1\n\nReproducing \"Does Price Matter in Charitable Giving? Evudence from a Large Scale Natural Field Experiment by Dean Karlan and John List\"\n\n\nMario Nonog\nApr 23, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHomework 2\n\n\n\n\nMario Nonog\nApr 23, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHomework 3\n\n\n\n\nMario Nonog\nApr 23, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHomework 4\n\n\n\n\nMario Nonog\nApr 23, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHomework 5\n\n\n\n\nMario Nonog\nApr 23, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/hw1/hw1_questions.html",
    "href": "projects/hw1/hw1_questions.html",
    "title": "Homework 1",
    "section": "",
    "text": "Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the American Economic Review in 2007. The article and supporting data are available from the AEA website and from Innovations for Poverty Action as part of Harvard‚Äôs Dataverse.\nIn their 2007 paper published in the American Economic Review, Dean Karlan and John List explored the behavioral economics of charitable giving through a large-scale natural field experiment. They sought to answer a core question in fundraising strategy: Does the way a donation appeal is framed‚Äîparticularly with the use of matching grants‚Äîsignificantly influence donor behavior? While prior research had focused heavily on tax incentives and the ‚Äúsupply side‚Äù of giving, Karlan and List shifted attention to the ‚Äúdemand side,‚Äù providing some of the first rigorous evidence on how potential donors respond to price-like mechanisms in real-world charitable campaigns.\nThis project seeks to replicate their results."
  },
  {
    "objectID": "projects/hw1/hw1_questions.html#introduction",
    "href": "projects/hw1/hw1_questions.html#introduction",
    "title": "Homework 1",
    "section": "",
    "text": "Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the American Economic Review in 2007. The article and supporting data are available from the AEA website and from Innovations for Poverty Action as part of Harvard‚Äôs Dataverse.\nIn their 2007 paper published in the American Economic Review, Dean Karlan and John List explored the behavioral economics of charitable giving through a large-scale natural field experiment. They sought to answer a core question in fundraising strategy: Does the way a donation appeal is framed‚Äîparticularly with the use of matching grants‚Äîsignificantly influence donor behavior? While prior research had focused heavily on tax incentives and the ‚Äúsupply side‚Äù of giving, Karlan and List shifted attention to the ‚Äúdemand side,‚Äù providing some of the first rigorous evidence on how potential donors respond to price-like mechanisms in real-world charitable campaigns.\nThis project seeks to replicate their results."
  },
  {
    "objectID": "projects/hw1/hw1_questions.html#data",
    "href": "projects/hw1/hw1_questions.html#data",
    "title": "Homework 1",
    "section": "Data",
    "text": "Data\n\nDescription\nThe experiment was conducted in collaboration with a liberal nonprofit organization in the United States that focuses on civil liberties. The researchers utilized a direct mail fundraising campaign, sending letters to over 50,000 prior donors from the organization‚Äôs database. Each recipient received a four-page fundraising letter that was identical in content, except for three randomized elements in the treatment group.\nThe individuals were divided into:\nControl Group: Received a standard donation request letter, with no mention of a matching grant. Treatment Group: Received a letter including a paragraph that announced a matching grant from a ‚Äúconcerned fellow member.‚Äù Within the treatment group, letters were further randomized across three dimensions:\nMatch Ratio: $1:$1 (every dollar donated is matched with $1) $2:$1 (every dollar is matched with $2) $3:$1 (every dollar is matched with $3) Maximum Match Amount: $25,000, $50,000, $100,000, or left unstated Suggested Donation Amounts: Based on the recipient‚Äôs previous highest donation, the reply card listed either the same amount, 1.25√ó, or 1.5√ó that amount The match offer was framed both in the text of the letter and visually highlighted on the reply card included in the envelope. The control group‚Äôs reply card featured only the organization‚Äôs logo.\n\n\n\n\n\n\nVariable Definitions\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\ntreatment\nTreatment\n\n\ncontrol\nControl\n\n\nratio\nMatch ratio\n\n\nratio2\n2:1 match ratio\n\n\nratio3\n3:1 match ratio\n\n\nsize\nMatch threshold\n\n\nsize25\n$25,000 match threshold\n\n\nsize50\n$50,000 match threshold\n\n\nsize100\n$100,000 match threshold\n\n\nsizeno\nUnstated match threshold\n\n\nask\nSuggested donation amount\n\n\naskd1\nSuggested donation was highest previous contribution\n\n\naskd2\nSuggested donation was 1.25 x highest previous contribution\n\n\naskd3\nSuggested donation was 1.50 x highest previous contribution\n\n\nask1\nHighest previous contribution (for suggestion)\n\n\nask2\n1.25 x highest previous contribution (for suggestion)\n\n\nask3\n1.50 x highest previous contribution (for suggestion)\n\n\namount\nDollars given\n\n\ngave\nGave anything\n\n\namountchange\nChange in amount given\n\n\nhpa\nHighest previous contribution\n\n\nltmedmra\nSmall prior donor: last gift was less than median $35\n\n\nfreq\nNumber of prior donations\n\n\nyears\nNumber of years since initial donation\n\n\nyear5\nAt least 5 years since initial donation\n\n\nmrm2\nNumber of months since last donation\n\n\ndormant\nAlready donated in 2005\n\n\nfemale\nFemale\n\n\ncouple\nCouple\n\n\nstate50one\nState tag: 1 for one observation of each of 50 states; 0 otherwise\n\n\nnonlit\nNonlitigation\n\n\ncases\nCourt cases from state in 2004-5 in which organization was involved\n\n\nstatecnt\nPercent of sample from state\n\n\nstateresponse\nProportion of sample from the state who gave\n\n\nstateresponset\nProportion of treated sample from the state who gave\n\n\nstateresponsec\nProportion of control sample from the state who gave\n\n\nstateresponsetminc\nstateresponset - stateresponsec\n\n\nperbush\nState vote share for Bush\n\n\nclose25\nState vote share for Bush between 47.5% and 52.5%\n\n\nred0\nRed state\n\n\nblue0\nBlue state\n\n\nredcty\nRed county\n\n\nbluecty\nBlue county\n\n\npwhite\nProportion white within zip code\n\n\npblack\nProportion black within zip code\n\n\npage18_39\nProportion age 18-39 within zip code\n\n\nave_hh_sz\nAverage household size within zip code\n\n\nmedian_hhincome\nMedian household income within zip code\n\n\npowner\nProportion house owner within zip code\n\n\npsch_atlstba\nProportion who finished college within zip code\n\n\npop_propurban\nProportion of population urban within zip code\n\n\n\n\n\n\n\n\nBalance Test\nAs an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.\nIn this step, we‚Äôre comparing the ‚Äúmonths since last donation‚Äù (mrm2) between the treatment and control groups using two different methods: a manual t-test and a linear regression. The t-test helps us determine whether there‚Äôs a statistically significant difference in the average time since last donation between the two groups. Then, we use a simple linear regression (mrm2 ~ treatment) to estimate the same difference ‚Äî where the treatment variable acts as a binary indicator (1 for treatment group, 0 for control). We summarize both results in clean, readable tables to clearly report the group means, differences, and statistical significance of the treatment effect. This allows us to confirm whether the random assignment successfully balanced this pre-treatment variable, which is an important validation step in any randomized experiment.\n\nimport pandas as pd\nimport numpy as np\nfrom scipy import stats\nimport statsmodels.formula.api as smf\n\n# Load data\ndf = pd.read_stata('karlan_list_2007.dta')\n\n# --- Manual T-Test ---\ntreated = df[df['treatment'] == 1]['mrm2']\ncontrol = df[df['treatment'] == 0]['mrm2']\n\nmean_diff = treated.mean() - control.mean()\nse_diff = np.sqrt((treated.var(ddof=1)/len(treated)) + (control.var(ddof=1)/len(control)))\nt_stat = mean_diff / se_diff\ndfree = len(treated) + len(control) - 2\np_val = 2 * (1 - stats.t.cdf(np.abs(t_stat), df=dfree))\n\n# Create a clean results table\nt_test_table = pd.DataFrame({\n    'Group': ['Treatment', 'Control', 'Difference'],\n    'Mean (mrm2)': [treated.mean(), control.mean(), mean_diff],\n    'Std. Error': [treated.std()/np.sqrt(len(treated)), control.std()/np.sqrt(len(control)), se_diff]\n})\n\nprint(\"\\nüìä Manual T-Test Summary:\")\nprint(t_test_table.round(4))\n\nprint(f\"\\nT-statistic: {t_stat:.4f}, p-value: {p_val:.4f}\")\n\n# --- Linear Regression ---\nmodel = smf.ols(\"mrm2 ~ treatment\", data=df).fit()\n\n# Create regression summary table\nreg_table = pd.DataFrame({\n    'Coefficient': model.params,\n    'Std. Error': model.bse,\n    't-Statistic': model.tvalues,\n    'P-Value': model.pvalues\n})\n\nprint(\"\\nüìâ Linear Regression Summary:\")\nprint(reg_table.round(4))\n\n\nüìä Manual T-Test Summary:\n        Group  Mean (mrm2)  Std. Error\n0   Treatment      13.0118      0.0661\n1     Control      12.9981      0.0935\n2  Difference       0.0137      0.1145\n\nT-statistic: 0.1195, p-value: 0.9049\n\nüìâ Linear Regression Summary:\n           Coefficient  Std. Error  t-Statistic  P-Value\nIntercept      12.9981      0.0935     138.9789   0.0000\ntreatment       0.0137      0.1145       0.1195   0.9049\n\n\nThis result shows that there is no statistically significant difference in the variable mrm2 between the treatment and control groups. In fact, the difference is so small it‚Äôs essentially zero ‚Äî people in both groups donated around 13 months ago, on average.\nThis is exactly what we expect and want before the experiment starts. It means the random assignment to treatment and control worked correctly ‚Äî the two groups were similar before any fundraising letters were sent."
  },
  {
    "objectID": "projects/hw1/hw1_questions.html#experimental-results",
    "href": "projects/hw1/hw1_questions.html#experimental-results",
    "title": "Homework 1",
    "section": "Experimental Results",
    "text": "Experimental Results\n\nCharitable Contribution Made\nFirst, I analyze whether matched donations lead to an increased response rate of making a donation.\nLet us visualize the donation rates for the treatment and control groups. We calculate the proportion of people who donated (gave == 1) in each group, then create a bar plot comparing these rates side by side. Each bar shows the average donation rate for its group, and we add labels above the bars to display the exact percentages. This plot gives a quick and intuitive view of how the treatment ‚Äî receiving a matching donation offer ‚Äî affected the likelihood of giving. This visualization complements our statistical analysis and helps illustrate the extensive margin effect of the treatment (i.e., whether more people chose to donate).\n\n\n\n\n\n\n\n\n\nNext step, we‚Äôre comparing donation rates between the treatment and control groups using two statistical approaches: a t-test and a simple linear regression. First, we perform an independent t-test to check if there is a statistically significant difference in the proportion of people who donated (gave) between the two groups. We summarize the group means, standard errors, and their difference in a clean table. Next, we run a bivariate linear regression (gave ~ treatment) to estimate the effect of treatment assignment on donation behavior. The treatment variable serves as a binary indicator (1 for treatment, 0 for control), and the coefficient tells us how much more (or less) likely someone is to donate if they were in the treatment group. Together, these analyses help us quantify and assess the causal impact of the matching donation offer on donation participation (i.e., the extensive margin).\n\nimport pandas as pd\nfrom scipy import stats\nimport statsmodels.formula.api as smf\n\n# Split groups\ntreated = df[df['treatment'] == 1]['gave']\ncontrol = df[df['treatment'] == 0]['gave']\n\n# --- T-Test ---\nt_stat, p_value = stats.ttest_ind(treated, control, equal_var=False)\n\n# Create a clean summary table for T-Test\nt_test_table = pd.DataFrame({\n    'Group': ['Treatment', 'Control'],\n    'Mean (gave)': [treated.mean(), control.mean()],\n    'Standard Error': [treated.std()/len(treated)**0.5, control.std()/len(control)**0.5]\n})\nt_test_table.loc[2] = ['Difference', treated.mean() - control.mean(), None]\n\nprint(\"üìä T-Test Summary:\\n\")\nprint(t_test_table.round(4))\nprint(f\"\\nt-statistic: {t_stat:.4f}\")\nprint(f\"p-value: {p_value:.4f}\")\n\n# --- Linear Regression ---\nmodel = smf.ols('gave ~ treatment', data=df).fit()\n\n# Format regression summary into a table\nreg_table = pd.DataFrame({\n    'Coefficient': model.params,\n    'Std. Error': model.bse,\n    't-Statistic': model.tvalues,\n    'P-Value': model.pvalues\n})\n\nprint(\"\\nüìâ Linear Regression Summary:\\n\")\nprint(reg_table.round(4))\n\nüìä T-Test Summary:\n\n        Group  Mean (gave)  Standard Error\n0   Treatment       0.0220          0.0008\n1     Control       0.0179          0.0010\n2  Difference       0.0042             NaN\n\nt-statistic: 3.2095\np-value: 0.0013\n\nüìâ Linear Regression Summary:\n\n           Coefficient  Std. Error  t-Statistic  P-Value\nIntercept       0.0179      0.0011      16.2246   0.0000\ntreatment       0.0042      0.0013       3.1014   0.0019\n\n\n/tmp/ipykernel_69059/2987996836.py:18: FutureWarning:\n\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n\n\n\nWhat This Means About Human Behavior We‚Äôve learned that people are more likely to give when they know their donation will be matched. Even though the increase might seem small numerically, the effect is meaningful: simply mentioning a matching gift nudges more people into taking action.\nThis tells us that:\nSocial cues matter. When people know others are also giving (like a ‚Äúconcerned member‚Äù offering a match), it makes them feel part of something. Framing matters. The idea that their donation will ‚Äúgo further‚Äù encourages behavior change. Behavior is not purely rational ‚Äî a simple sentence in a letter changes what people do with their money. This is why Table 2A (Panel A) in the paper is so important ‚Äî it quantifies how a subtle psychological nudge leads to real-world donations.\nNow let us estimate a probit regression model to analyze the effect of the treatment on the likelihood of making a donation. The dependent variable is gave (a binary indicator for whether the individual donated), and the independent variable is treatment (1 if the person received the matching offer, 0 otherwise). Using a probit model allows us to model the probability of donating as a nonlinear function of the treatment assignment, assuming a standard normal distribution of the error term. This method is appropriate for binary outcome variables and provides a more statistically rigorous approach than a linear probability model. The results will help us assess whether the treatment significantly increases the probability of giving, and by how much (on a latent scale).\n\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\n\n# Run the probit model: gave ~ treatment\nprobit_model = smf.probit('gave ~ treatment', data=df).fit()\n\n# Print summary\nprint(probit_model.summary())\n\nOptimization terminated successfully.\n         Current function value: 0.100443\n         Iterations 7\n                          Probit Regression Results                           \n==============================================================================\nDep. Variable:                   gave   No. Observations:                50083\nModel:                         Probit   Df Residuals:                    50081\nMethod:                           MLE   Df Model:                            1\nDate:                Wed, 23 Apr 2025   Pseudo R-squ.:               0.0009783\nTime:                        22:09:50   Log-Likelihood:                -5030.5\nconverged:                       True   LL-Null:                       -5035.4\nCovariance Type:            nonrobust   LLR p-value:                  0.001696\n==============================================================================\n                 coef    std err          z      P&gt;|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept     -2.1001      0.023    -90.073      0.000      -2.146      -2.054\ntreatment      0.0868      0.028      3.113      0.002       0.032       0.141\n==============================================================================\n\n\nNOTE: Linear regression results appear replicate Table 3 column 1 in the paper. Probit results do not, despite Table 3 indicating its results come from probit regressions‚Ä¶\n\n\nDifferences between Match Rates\nNext, I assess the effectiveness of different sizes of matched donations on the response rate.\n\nfrom scipy import stats\n\n# Filter treatment group only\nmatch_group = df[df['treatment'] == 1]\n\n# Define donation status for each ratio group\ngave_ratio_1 = match_group[match_group['ratio'] == 1]['gave']\ngave_ratio_2 = match_group[match_group['ratio'] == 2]['gave']\ngave_ratio_3 = match_group[match_group['ratio'] == 3]['gave']\n\n# --- 1:1 vs 2:1 ---\ntstat_1v2, pval_1v2 = stats.ttest_ind(gave_ratio_1, gave_ratio_2, equal_var=False)\nprint(\"T-test: 1:1 vs 2:1\")\nprint(f\"t-statistic = {tstat_1v2:.4f}, p-value = {pval_1v2:.4f}\")\n\n# --- 1:1 vs 3:1 ---\ntstat_1v3, pval_1v3 = stats.ttest_ind(gave_ratio_1, gave_ratio_3, equal_var=False)\nprint(\"\\nT-test: 1:1 vs 3:1\")\nprint(f\"t-statistic = {tstat_1v3:.4f}, p-value = {pval_1v3:.4f}\")\n\n# --- 2:1 vs 3:1 ---\ntstat_2v3, pval_2v3 = stats.ttest_ind(gave_ratio_2, gave_ratio_3, equal_var=False)\nprint(\"\\nT-test: 2:1 vs 3:1\")\nprint(f\"t-statistic = {tstat_2v3:.4f}, p-value = {pval_2v3:.4f}\")\n\nT-test: 1:1 vs 2:1\nt-statistic = -0.9650, p-value = 0.3345\n\nT-test: 1:1 vs 3:1\nt-statistic = -1.0150, p-value = 0.3101\n\nT-test: 2:1 vs 3:1\nt-statistic = -0.0501, p-value = 0.9600\n\n\n‚ÄúWhile the match treatments relative to a control group increase the probability of donating, larger match ratios‚Äî$3:$1 and $2:$1‚Äîrelative to a smaller match ratio ($1:$1) have no additional impact.‚Äù‚Äìfrom page 8\nYes ‚Äî the results support the ‚Äúfigures suggest‚Äù comment made by the authors on page 8 of the Karlan & List (2007) paper. All p-values are well above 0.05, which means that none of the differences between match ratios are statistically significant. In other words, there‚Äôs no evidence that higher match ratios (like 2:1 or 3:1) increased the likelihood of giving compared to a 1:1 match.\nNext, we‚Äôre analyzing whether the size of the match ratio (1:1, 2:1, or 3:1) affects the likelihood that someone donates ‚Äî but only among individuals who were in the treatment group (i.e., who received a match offer). We approach this in two ways: 1. Dummy variable regression: We create binary variables for each match ratio and run a regression using gave as the outcome and ratio2 and ratio3 as predictors, with ratio1 (1:1 match) serving as the baseline. This lets us interpret the coefficients as changes in donation probability relative to the 1:1 group. 2. Categorical variable regression: We use C(ratio) to treat the ratio variable as a categorical factor. This achieves the same comparison as above but allows statsmodels to handle dummy coding internally. Both models help us determine whether offering a more generous match (like 2:1 or 3:1) significantly increases the probability of donation compared to a standard 1:1 match. The resulting tables summarize the estimated effects, their statistical significance, and allow us to assess whether larger match ratios are more effective. -\n\nimport pandas as pd\nimport statsmodels.formula.api as smf\n\n# 1. Filter for treatment group only (those who received a match offer)\nmatch_df = df[df['treatment'] == 1].copy()\n\n# 2. Create dummy variables for match ratio\nmatch_df['ratio1'] = (match_df['ratio'] == 1).astype(int)\nmatch_df['ratio2'] = (match_df['ratio'] == 2).astype(int)\nmatch_df['ratio3'] = (match_df['ratio'] == 3).astype(int)\n\n# 3. Regression using ratio2 and ratio3 (ratio1 is baseline)\nmodel_dummies = smf.ols('gave ~ ratio2 + ratio3', data=match_df).fit()\n\n# 4. Regression using ratio as categorical variable\nmodel_cat = smf.ols('gave ~ C(ratio)', data=match_df).fit()\n\n# Format model_dummies summary\nreg_dummies_table = pd.DataFrame({\n    'Coefficient': model_dummies.params,\n    'Std. Error': model_dummies.bse,\n    't-Statistic': model_dummies.tvalues,\n    'P-Value': model_dummies.pvalues\n}).round(4)\n\n# Format model_cat summary\nreg_cat_table = pd.DataFrame({\n    'Coefficient': model_cat.params,\n    'Std. Error': model_cat.bse,\n    't-Statistic': model_cat.tvalues,\n    'P-Value': model_cat.pvalues\n}).round(4)\n\n# Display tables\nprint(\"üìâ Regression using dummy variables (baseline is ratio1):\\n\")\nprint(reg_dummies_table)\n\nprint(\"\\nüìä Regression using C(ratio) as a categorical variable:\\n\")\nprint(reg_cat_table)\n\nüìâ Regression using dummy variables (baseline is ratio1):\n\n           Coefficient  Std. Error  t-Statistic  P-Value\nIntercept       0.0207      0.0014      14.9122   0.0000\nratio2          0.0019      0.0020       0.9576   0.3383\nratio3          0.0020      0.0020       1.0083   0.3133\n\nüìä Regression using C(ratio) as a categorical variable:\n\n                Coefficient    Std. Error  t-Statistic  P-Value\nIntercept      1.229429e+09  1.118256e+10       0.1099   0.9125\nC(ratio)[T.1] -1.229429e+09  1.118256e+10      -0.1099   0.9125\nC(ratio)[T.2] -1.229429e+09  1.118256e+10      -0.1099   0.9125\nC(ratio)[T.3] -1.229429e+09  1.118256e+10      -0.1099   0.9125\n\n\nInterpretation: - People in the 1:1 match group donated at a rate of about 2.07%. - Offering a more generous match ‚Äî 2:1 or 3:1 ‚Äî slightly increased the donation rate by about 0.2 percentage points, but this difference was not statistically significant. - The p-values for both ratio2 and ratio3 are well above 0.05, meaning we cannot conclude that these match levels had a meaningful effect on donor behavior.\n\nNext step: We‚Äôll evaluate how the size of the match ratio affects donation rates by comparing the response rate differences between the 1:1 and 2:1 match groups, and between the 2:1 and 3:1 groups. We‚Äôll do this in two ways: first, by calculating the differences directly from the observed data, and second, by comparing the coefficients from our earlier regression models. This will help us assess whether offering more generous match ratios leads to meaningfully higher donation rates. We‚Äôll then draw conclusions about the practical effectiveness of increasing the match size.\n\n# Step 1: Filter to treatment group\nmatch_df = df[df['treatment'] == 1]\n\n# Step 2: Calculate response rates directly from data\nrate_1 = match_df[match_df['ratio'] == 1]['gave'].mean()\nrate_2 = match_df[match_df['ratio'] == 2]['gave'].mean()\nrate_3 = match_df[match_df['ratio'] == 3]['gave'].mean()\n\ndiff_1v2 = rate_2 - rate_1\ndiff_2v3 = rate_3 - rate_2\n\n# Step 3: Use regression coefficients (from earlier model)\n# These should match your actual model output ‚Äî adjust if needed\nrate_1_pred = 0.0207        # Intercept\ncoef_ratio2 = 0.0019\ncoef_ratio3 = 0.0020\n\nrate_2_pred = rate_1_pred + coef_ratio2\nrate_3_pred = rate_1_pred + coef_ratio3\n\ndiff_1v2_pred = rate_2_pred - rate_1_pred\ndiff_2v3_pred = rate_3_pred - rate_2_pred\n\n# Step 4: Display results\nprint(\"üî¢ Direct from data:\")\nprint(f\"Response rate (1:1): {rate_1:.4f}\")\nprint(f\"Response rate (2:1): {rate_2:.4f}\")\nprint(f\"Response rate (3:1): {rate_3:.4f}\")\nprint(f\"1:1 vs 2:1 match difference: {diff_1v2:.4f}\")\nprint(f\"2:1 vs 3:1 match difference: {diff_2v3:.4f}\")\n\nprint(\"\\nüìä From regression coefficients:\")\nprint(f\"Predicted rate (1:1): {rate_1_pred:.4f}\")\nprint(f\"Predicted rate (2:1): {rate_2_pred:.4f}\")\nprint(f\"Predicted rate (3:1): {rate_3_pred:.4f}\")\nprint(f\"1:1 vs 2:1 match difference (predicted): {diff_1v2_pred:.4f}\")\nprint(f\"2:1 vs 3:1 match difference (predicted): {diff_2v3_pred:.4f}\")\n\nüî¢ Direct from data:\nResponse rate (1:1): 0.0207\nResponse rate (2:1): 0.0226\nResponse rate (3:1): 0.0227\n1:1 vs 2:1 match difference: 0.0019\n2:1 vs 3:1 match difference: 0.0001\n\nüìä From regression coefficients:\nPredicted rate (1:1): 0.0207\nPredicted rate (2:1): 0.0226\nPredicted rate (3:1): 0.0227\n1:1 vs 2:1 match difference (predicted): 0.0019\n2:1 vs 3:1 match difference (predicted): 0.0001\n\n\nFrom both your raw data and regression predictions, here‚Äôs what we can conclude:\n-Moving from a 1:1 to a 2:1 match increases the donation rate by just 0.19 percentage points. -Moving from a 2:1 to a 3:1 match increases the rate by only 0.01 percentage points. -These changes are extremely small and, as your earlier t-tests and regression showed, not statistically significant.\n\n\nSize of Charitable Contribution\nIn this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\n\n*First step: Perform a t-test or simple linear regression to analyze whether being in the treatment group had an effect on the amount donated**. This helps us understand whether the matching offer influenced not just whether people gave, but how much they gave. We‚Äôll interpret the results to assess the impact of the treatment on donation size.\n\nimport pandas as pd\nfrom scipy import stats\nimport statsmodels.formula.api as smf\n\n# Step 1: Split into treatment and control groups\namount_treat = df[df['treatment'] == 1]['amount']\namount_control = df[df['treatment'] == 0]['amount']\n\n# Step 2: T-test\nt_stat, p_val = stats.ttest_ind(amount_treat, amount_control, equal_var=False)\n\n# Create clean summary table\nt_test_table = pd.DataFrame({\n    'Group': ['Treatment', 'Control', 'Difference'],\n    'Mean (amount)': [\n        amount_treat.mean(),\n        amount_control.mean(),\n        amount_treat.mean() - amount_control.mean()\n    ],\n    'Std. Error': [\n        amount_treat.std(ddof=1) / len(amount_treat)**0.5,\n        amount_control.std(ddof=1) / len(amount_control)**0.5,\n        None\n    ]\n}).round(4)\n\nprint(\"üî¢ T-Test Summary Table:\\n\")\nprint(t_test_table)\n\nprint(f\"\\nt-statistic: {t_stat:.4f}\")\nprint(f\"p-value:     {p_val:.4f}\")\n\n# Step 3: Linear Regression\nmodel = smf.ols('amount ~ treatment', data=df).fit()\n\n# Create regression result table\nreg_table = pd.DataFrame({\n    'Coefficient': model.params,\n    'Std. Error': model.bse,\n    't-Statistic': model.tvalues,\n    'P-Value': model.pvalues\n}).round(4)\n\nprint(\"\\nüìä Linear Regression Summary Table:\\n\")\nprint(reg_table)\n\nüî¢ T-Test Summary Table:\n\n        Group  Mean (amount)  Std. Error\n0   Treatment         0.9669      0.0490\n1     Control         0.8133      0.0633\n2  Difference         0.1536         NaN\n\nt-statistic: 1.9183\np-value:     0.0551\n\nüìä Linear Regression Summary Table:\n\n           Coefficient  Std. Error  t-Statistic  P-Value\nIntercept       0.8133      0.0674      12.0630   0.0000\ntreatment       0.1536      0.0826       1.8605   0.0628\n\n\n-This analysis shows that offering a match might increase not only the likelihood of giving but also the amount given, though the evidence is not quite strong enough to be statistically conclusive at the standard 95% confidence level.\n-So far, the match offer seems to mainly help on the extensive margin ‚Äî getting more people to donate. Its effect on the intensive margin ‚Äî how much people give ‚Äî appears small and uncertain.\n\nNext step: Focus only on individuals who actually made a donation (gave == 1) and re-run the previous analysis using this subset. This allows us to examine how much people donate conditional on giving. We‚Äôll interpret the regression results to understand whether the treatment influenced the donation amount among donors, and consider whether the treatment effect in this case can be interpreted causally\n\nimport pandas as pd\nfrom scipy import stats\nimport statsmodels.formula.api as smf\n\n# Step 1: Filter to donors only\ndonors_df = df[df['gave'] == 1]\n\n# Step 2: Split groups\namount_treat = donors_df[donors_df['treatment'] == 1]['amount']\namount_control = donors_df[donors_df['treatment'] == 0]['amount']\n\n# Step 3: T-test\nt_stat, p_val = stats.ttest_ind(amount_treat, amount_control, equal_var=False)\n\n# Step 4: T-test Summary Table\nt_test_table = pd.DataFrame({\n    'Group': ['Treatment', 'Control', 'Difference'],\n    'Mean (amount)': [\n        amount_treat.mean(),\n        amount_control.mean(),\n        amount_treat.mean() - amount_control.mean()\n    ],\n    'Std. Error': [\n        amount_treat.std(ddof=1) / len(amount_treat)**0.5,\n        amount_control.std(ddof=1) / len(amount_control)**0.5,\n        None\n    ]\n}).round(4)\n\nprint(\"üî¢ T-Test Summary (Among Donors Only):\\n\")\nprint(t_test_table)\nprint(f\"\\nt-statistic: {t_stat:.4f}\")\nprint(f\"p-value:     {p_val:.4f}\")\n\n# Step 5: Regression (OLS)\nmodel = smf.ols('amount ~ treatment', data=donors_df).fit()\n\n# Step 6: Regression Summary Table\nreg_table = pd.DataFrame({\n    'Coefficient': model.params,\n    'Std. Error': model.bse,\n    't-Statistic': model.tvalues,\n    'P-Value': model.pvalues\n}).round(4)\n\nprint(\"\\nüìä Linear Regression Summary (Among Donors Only):\\n\")\nprint(reg_table)\n\nüî¢ T-Test Summary (Among Donors Only):\n\n        Group  Mean (amount)  Std. Error\n0   Treatment      43.871899      1.5487\n1     Control      45.540298      2.3971\n2  Difference      -1.668400         NaN\n\nt-statistic: -0.5846\np-value:     0.5590\n\nüìä Linear Regression Summary (Among Donors Only):\n\n           Coefficient  Std. Error  t-Statistic  P-Value\nIntercept      45.5403      2.4234      18.7921   0.0000\ntreatment      -1.6684      2.8724      -0.5808   0.5615\n\n\nThe coefficient on treatment is ‚Äì1.67, which means that, among those who donated, people in the treatment group gave $1.67 less on average than those in the control group. However, the p-value is 0.561, indicating that this difference is not statistically significant. In short, we find no evidence that the treatment affected the amount donated among those who gave.\nWe learned that the matching grant offer did not change how much people gave, once they decided to donate. The main impact of the treatment was likely on getting people to donate in the first place (the extensive margin), not on how much they donated (the intensive margin). So the match was effective at increasing participation, but not effective at increasing donation size among participants.\nDoes the treatment coefficient have a causal interpretation? Answer: No, the treatment coefficient in this regression does not have a valid causal interpretation. Because the regression is conditional on donating (i.e., only includes people for whom gave == 1). But treatment itself influences who ends up in this group ‚Äî meaning we‚Äôre analyzing a selected subgroup that may differ systematically between treatment and control.\nThis introduces selection bias, so the regression tells us about differences among donors, but not about the causal effect of treatment on donation size.\n\nThen: We‚Äôll create two histograms ‚Äî one for the treatment group and one for the control group ‚Äî showing the distribution of donation amounts only among individuals who made a donation. We‚Äôll also add a red vertical line to each plot to mark the average donation amount, allowing us to visually compare the giving behavior between the two groups."
  },
  {
    "objectID": "projects/hw1/hw1_questions.html#simulation-experiment",
    "href": "projects/hw1/hw1_questions.html#simulation-experiment",
    "title": "Homework 1",
    "section": "Simulation Experiment",
    "text": "Simulation Experiment\nAs a reminder of how the t-statistic ‚Äúworks,‚Äù in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.\nSuppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made.\nFurther suppose that the true distribution of respondents who do get a charitable donation match of any size is Bernoulli with probability p=0.022 that a donation is made.\n\nLaw of Large Numbers\n\nFirst: We‚Äôll simulate 10,000 individual outcomes from both the treatment and control groups using their actual donation probabilities. For each simulated pair, we‚Äôll compute the difference in giving behavior (1 or 0). By calculating the cumulative average of these 10,000 differences, we‚Äôll observe how the estimated treatment effect evolves with increasing sample size. The plot will start off noisy, but it should stabilize around the true effect (~0.004) as the number of simulations grows. We‚Äôll use this to visually demonstrate the Law of Large Numbers and explain the result to the reader.\n\n\n\n\n\n\n\n\n\n-At first (left side of the plot), the estimate is highly volatile ‚Äî bouncing around because it‚Äôs based on only a few observations. -As the number of simulations increases (moving right), the average stabilizes and converges to the true treatment effect. -This is a practical demonstration of the Law of Large Numbers: the more data we gather, the more reliable our estimate becomes.\nAs the number of simulations increases (moving right), the average stabilizes and converges to the true treatment effect. This is a practical demonstration of the Law of Large Numbers: the more data we gather, the more reliable our estimate becomes.\n\n\nCentral Limit Theorem\n\nNow We‚Äôll simulate sampling from the treatment and control groups at four different sample sizes: 50, 200, 500, and 1000. For each sample size, we‚Äôll draw 50 (or more) observations from each group, calculate the average difference in donation rates, and repeat this process 1,000 times to generate a distribution of sample differences. Then, we‚Äôll plot a histogram of those 1,000 differences for each sample size. This series of histograms will help demonstrate how, as sample size increases, the distribution of sample averages becomes narrower and more centered around the true treatment effect ‚Äî a visual illustration of the Central Limit Theorem.\n\n\n\n\n\n\n\n\n\n-Sample Size = 50: The distribution is wide and erratic. The sample mean differences vary a lot ‚Äî some simulations overestimate the effect, others underestimate it. The shape is not very normal.\n-Sample Size = 200: The distribution begins to tighten. It‚Äôs more centered around the true effect, though still somewhat spread out.\n-Sample Size = 500: The distribution is clearly bell-shaped, centered around the estimated effect, with less variation.\n-Sample Size = 1000: The distribution is even tighter and smoother. Most estimates fall within a narrow range around the true effect of ~0.0045.\nOverall, this progression of histograms visually demonstrates the Central Limit Theorem in action. As the sample size increases, the variability of the sampling distribution decreases, and the distribution becomes more symmetric and concentrated around the true treatment effect. This shows that with larger samples, our estimates become more reliable and precise ‚Äî even when the underlying effect is small. It‚Äôs a powerful reminder that sample size plays a critical role in detecting and confidently estimating treatment effects in experimental data."
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Mario‚Äôs Resume",
    "section": "",
    "text": "last updated 2025-04-05\nDownload PDF file."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mario P. Nonog Jr.",
    "section": "",
    "text": "Navy Veteran Officer and Business Analyst Graduate Student with expertise in Statistical Forecasting, Planning and technical data expertise. Skilled in Mathematical Instrument such as python (pandas, numpy), MATLAB, and Excel to deliver insights, statistical models, and solutions of complex problems through integration and regression testing."
  }
]